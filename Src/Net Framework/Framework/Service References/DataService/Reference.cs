//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Framework.DataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectInfo", Namespace="http://labs.shahed.net/")]
    [System.SerializableAttribute()]
    internal partial class ProjectInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Framework.DataService.ArrayOfString GestureNamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        internal string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        internal Framework.DataService.ArrayOfString GestureNames {
            get {
                return this.GestureNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GestureNamesField, value) != true)) {
                    this.GestureNamesField = value;
                    this.RaisePropertyChanged("GestureNames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://labs.shahed.net/", ItemName="string")]
    [System.SerializableAttribute()]
    internal class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://labs.shahed.net/", ConfigurationName="DataService.GestureServiceSoap")]
    internal interface GestureServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://labs.shahed.net/ConnectivityCheck", ReplyAction="*")]
        bool ConnectivityCheck();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://labs.shahed.net/ConnectivityCheck", ReplyAction="*")]
        System.IAsyncResult BeginConnectivityCheck(System.AsyncCallback callback, object asyncState);
        
        bool EndConnectivityCheck(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name userName from namespace http://labs.shahed.net/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://labs.shahed.net/AddGestureData", ReplyAction="*")]
        Framework.DataService.AddGestureDataResponse AddGestureData(Framework.DataService.AddGestureDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://labs.shahed.net/AddGestureData", ReplyAction="*")]
        System.IAsyncResult BeginAddGestureData(Framework.DataService.AddGestureDataRequest request, System.AsyncCallback callback, object asyncState);
        
        Framework.DataService.AddGestureDataResponse EndAddGestureData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name userName from namespace http://labs.shahed.net/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://labs.shahed.net/GetProjectsByUser", ReplyAction="*")]
        Framework.DataService.GetProjectsByUserResponse GetProjectsByUser(Framework.DataService.GetProjectsByUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://labs.shahed.net/GetProjectsByUser", ReplyAction="*")]
        System.IAsyncResult BeginGetProjectsByUser(Framework.DataService.GetProjectsByUserRequest request, System.AsyncCallback callback, object asyncState);
        
        Framework.DataService.GetProjectsByUserResponse EndGetProjectsByUser(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name userName from namespace http://labs.shahed.net/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://labs.shahed.net/GetGestureData", ReplyAction="*")]
        Framework.DataService.GetGestureDataResponse GetGestureData(Framework.DataService.GetGestureDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://labs.shahed.net/GetGestureData", ReplyAction="*")]
        System.IAsyncResult BeginGetGestureData(Framework.DataService.GetGestureDataRequest request, System.AsyncCallback callback, object asyncState);
        
        Framework.DataService.GetGestureDataResponse EndGetGestureData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://labs.shahed.net/Delete", ReplyAction="*")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://labs.shahed.net/Delete", ReplyAction="*")]
        System.IAsyncResult BeginDelete(int id, System.AsyncCallback callback, object asyncState);
        
        void EndDelete(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name userName from namespace http://labs.shahed.net/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://labs.shahed.net/IsUserNameUnique", ReplyAction="*")]
        Framework.DataService.IsUserNameUniqueResponse IsUserNameUnique(Framework.DataService.IsUserNameUniqueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://labs.shahed.net/IsUserNameUnique", ReplyAction="*")]
        System.IAsyncResult BeginIsUserNameUnique(Framework.DataService.IsUserNameUniqueRequest request, System.AsyncCallback callback, object asyncState);
        
        Framework.DataService.IsUserNameUniqueResponse EndIsUserNameUnique(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name userName from namespace http://labs.shahed.net/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://labs.shahed.net/LastUpdatedAt", ReplyAction="*")]
        Framework.DataService.LastUpdatedAtResponse LastUpdatedAt(Framework.DataService.LastUpdatedAtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://labs.shahed.net/LastUpdatedAt", ReplyAction="*")]
        System.IAsyncResult BeginLastUpdatedAt(Framework.DataService.LastUpdatedAtRequest request, System.AsyncCallback callback, object asyncState);
        
        Framework.DataService.LastUpdatedAtResponse EndLastUpdatedAt(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class AddGestureDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddGestureData", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.AddGestureDataRequestBody Body;
        
        public AddGestureDataRequest() {
        }
        
        public AddGestureDataRequest(Framework.DataService.AddGestureDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class AddGestureDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string projectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string gestureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string gestureData;
        
        public AddGestureDataRequestBody() {
        }
        
        public AddGestureDataRequestBody(string userName, string projectName, string gestureName, string gestureData) {
            this.userName = userName;
            this.projectName = projectName;
            this.gestureName = gestureName;
            this.gestureData = gestureData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class AddGestureDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddGestureDataResponse", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.AddGestureDataResponseBody Body;
        
        public AddGestureDataResponse() {
        }
        
        public AddGestureDataResponse(Framework.DataService.AddGestureDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    internal partial class AddGestureDataResponseBody {
        
        public AddGestureDataResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class GetProjectsByUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProjectsByUser", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.GetProjectsByUserRequestBody Body;
        
        public GetProjectsByUserRequest() {
        }
        
        public GetProjectsByUserRequest(Framework.DataService.GetProjectsByUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class GetProjectsByUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        public GetProjectsByUserRequestBody() {
        }
        
        public GetProjectsByUserRequestBody(string userName) {
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class GetProjectsByUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProjectsByUserResponse", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.GetProjectsByUserResponseBody Body;
        
        public GetProjectsByUserResponse() {
        }
        
        public GetProjectsByUserResponse(Framework.DataService.GetProjectsByUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class GetProjectsByUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Framework.DataService.ProjectInfo[] GetProjectsByUserResult;
        
        public GetProjectsByUserResponseBody() {
        }
        
        public GetProjectsByUserResponseBody(Framework.DataService.ProjectInfo[] GetProjectsByUserResult) {
            this.GetProjectsByUserResult = GetProjectsByUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class GetGestureDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGestureData", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.GetGestureDataRequestBody Body;
        
        public GetGestureDataRequest() {
        }
        
        public GetGestureDataRequest(Framework.DataService.GetGestureDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class GetGestureDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string projectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string gestureName;
        
        public GetGestureDataRequestBody() {
        }
        
        public GetGestureDataRequestBody(string userName, string projectName, string gestureName) {
            this.userName = userName;
            this.projectName = projectName;
            this.gestureName = gestureName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class GetGestureDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGestureDataResponse", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.GetGestureDataResponseBody Body;
        
        public GetGestureDataResponse() {
        }
        
        public GetGestureDataResponse(Framework.DataService.GetGestureDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class GetGestureDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetGestureDataResult;
        
        public GetGestureDataResponseBody() {
        }
        
        public GetGestureDataResponseBody(string GetGestureDataResult) {
            this.GetGestureDataResult = GetGestureDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class IsUserNameUniqueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsUserNameUnique", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.IsUserNameUniqueRequestBody Body;
        
        public IsUserNameUniqueRequest() {
        }
        
        public IsUserNameUniqueRequest(Framework.DataService.IsUserNameUniqueRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class IsUserNameUniqueRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        public IsUserNameUniqueRequestBody() {
        }
        
        public IsUserNameUniqueRequestBody(string userName) {
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class IsUserNameUniqueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsUserNameUniqueResponse", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.IsUserNameUniqueResponseBody Body;
        
        public IsUserNameUniqueResponse() {
        }
        
        public IsUserNameUniqueResponse(Framework.DataService.IsUserNameUniqueResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class IsUserNameUniqueResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool IsUserNameUniqueResult;
        
        public IsUserNameUniqueResponseBody() {
        }
        
        public IsUserNameUniqueResponseBody(bool IsUserNameUniqueResult) {
            this.IsUserNameUniqueResult = IsUserNameUniqueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class LastUpdatedAtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LastUpdatedAt", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.LastUpdatedAtRequestBody Body;
        
        public LastUpdatedAtRequest() {
        }
        
        public LastUpdatedAtRequest(Framework.DataService.LastUpdatedAtRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class LastUpdatedAtRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        public LastUpdatedAtRequestBody() {
        }
        
        public LastUpdatedAtRequestBody(string userName) {
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class LastUpdatedAtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LastUpdatedAtResponse", Namespace="http://labs.shahed.net/", Order=0)]
        public Framework.DataService.LastUpdatedAtResponseBody Body;
        
        public LastUpdatedAtResponse() {
        }
        
        public LastUpdatedAtResponse(Framework.DataService.LastUpdatedAtResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://labs.shahed.net/")]
    internal partial class LastUpdatedAtResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.DateTime LastUpdatedAtResult;
        
        public LastUpdatedAtResponseBody() {
        }
        
        public LastUpdatedAtResponseBody(System.DateTime LastUpdatedAtResult) {
            this.LastUpdatedAtResult = LastUpdatedAtResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface GestureServiceSoapChannel : Framework.DataService.GestureServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class ConnectivityCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectivityCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetProjectsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Framework.DataService.ProjectInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Framework.DataService.ProjectInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetGestureDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGestureDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class IsUserNameUniqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsUserNameUniqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class LastUpdatedAtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LastUpdatedAtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GestureServiceSoapClient : System.ServiceModel.ClientBase<Framework.DataService.GestureServiceSoap>, Framework.DataService.GestureServiceSoap {
        
        private BeginOperationDelegate onBeginConnectivityCheckDelegate;
        
        private EndOperationDelegate onEndConnectivityCheckDelegate;
        
        private System.Threading.SendOrPostCallback onConnectivityCheckCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddGestureDataDelegate;
        
        private EndOperationDelegate onEndAddGestureDataDelegate;
        
        private System.Threading.SendOrPostCallback onAddGestureDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectsByUserDelegate;
        
        private EndOperationDelegate onEndGetProjectsByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectsByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGestureDataDelegate;
        
        private EndOperationDelegate onEndGetGestureDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetGestureDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsUserNameUniqueDelegate;
        
        private EndOperationDelegate onEndIsUserNameUniqueDelegate;
        
        private System.Threading.SendOrPostCallback onIsUserNameUniqueCompletedDelegate;
        
        private BeginOperationDelegate onBeginLastUpdatedAtDelegate;
        
        private EndOperationDelegate onEndLastUpdatedAtDelegate;
        
        private System.Threading.SendOrPostCallback onLastUpdatedAtCompletedDelegate;
        
        public GestureServiceSoapClient() {
        }
        
        public GestureServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestureServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestureServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestureServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ConnectivityCheckCompletedEventArgs> ConnectivityCheckCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddGestureDataCompleted;
        
        public event System.EventHandler<GetProjectsByUserCompletedEventArgs> GetProjectsByUserCompleted;
        
        public event System.EventHandler<GetGestureDataCompletedEventArgs> GetGestureDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<IsUserNameUniqueCompletedEventArgs> IsUserNameUniqueCompleted;
        
        public event System.EventHandler<LastUpdatedAtCompletedEventArgs> LastUpdatedAtCompleted;
        
        public bool ConnectivityCheck() {
            return base.Channel.ConnectivityCheck();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnectivityCheck(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectivityCheck(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndConnectivityCheck(System.IAsyncResult result) {
            return base.Channel.EndConnectivityCheck(result);
        }
        
        private System.IAsyncResult OnBeginConnectivityCheck(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginConnectivityCheck(callback, asyncState);
        }
        
        private object[] OnEndConnectivityCheck(System.IAsyncResult result) {
            bool retVal = this.EndConnectivityCheck(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConnectivityCheckCompleted(object state) {
            if ((this.ConnectivityCheckCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectivityCheckCompleted(this, new ConnectivityCheckCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectivityCheckAsync() {
            this.ConnectivityCheckAsync(null);
        }
        
        public void ConnectivityCheckAsync(object userState) {
            if ((this.onBeginConnectivityCheckDelegate == null)) {
                this.onBeginConnectivityCheckDelegate = new BeginOperationDelegate(this.OnBeginConnectivityCheck);
            }
            if ((this.onEndConnectivityCheckDelegate == null)) {
                this.onEndConnectivityCheckDelegate = new EndOperationDelegate(this.OnEndConnectivityCheck);
            }
            if ((this.onConnectivityCheckCompletedDelegate == null)) {
                this.onConnectivityCheckCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectivityCheckCompleted);
            }
            base.InvokeAsync(this.onBeginConnectivityCheckDelegate, null, this.onEndConnectivityCheckDelegate, this.onConnectivityCheckCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.AddGestureDataResponse Framework.DataService.GestureServiceSoap.AddGestureData(Framework.DataService.AddGestureDataRequest request) {
            return base.Channel.AddGestureData(request);
        }
        
        public void AddGestureData(string userName, string projectName, string gestureName, string gestureData) {
            Framework.DataService.AddGestureDataRequest inValue = new Framework.DataService.AddGestureDataRequest();
            inValue.Body = new Framework.DataService.AddGestureDataRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.projectName = projectName;
            inValue.Body.gestureName = gestureName;
            inValue.Body.gestureData = gestureData;
            Framework.DataService.AddGestureDataResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).AddGestureData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Framework.DataService.GestureServiceSoap.BeginAddGestureData(Framework.DataService.AddGestureDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddGestureData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddGestureData(string userName, string projectName, string gestureName, string gestureData, System.AsyncCallback callback, object asyncState) {
            Framework.DataService.AddGestureDataRequest inValue = new Framework.DataService.AddGestureDataRequest();
            inValue.Body = new Framework.DataService.AddGestureDataRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.projectName = projectName;
            inValue.Body.gestureName = gestureName;
            inValue.Body.gestureData = gestureData;
            return ((Framework.DataService.GestureServiceSoap)(this)).BeginAddGestureData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.AddGestureDataResponse Framework.DataService.GestureServiceSoap.EndAddGestureData(System.IAsyncResult result) {
            return base.Channel.EndAddGestureData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddGestureData(System.IAsyncResult result) {
            Framework.DataService.AddGestureDataResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).EndAddGestureData(result);
        }
        
        private System.IAsyncResult OnBeginAddGestureData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string projectName = ((string)(inValues[1]));
            string gestureName = ((string)(inValues[2]));
            string gestureData = ((string)(inValues[3]));
            return this.BeginAddGestureData(userName, projectName, gestureName, gestureData, callback, asyncState);
        }
        
        private object[] OnEndAddGestureData(System.IAsyncResult result) {
            this.EndAddGestureData(result);
            return null;
        }
        
        private void OnAddGestureDataCompleted(object state) {
            if ((this.AddGestureDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddGestureDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddGestureDataAsync(string userName, string projectName, string gestureName, string gestureData) {
            this.AddGestureDataAsync(userName, projectName, gestureName, gestureData, null);
        }
        
        public void AddGestureDataAsync(string userName, string projectName, string gestureName, string gestureData, object userState) {
            if ((this.onBeginAddGestureDataDelegate == null)) {
                this.onBeginAddGestureDataDelegate = new BeginOperationDelegate(this.OnBeginAddGestureData);
            }
            if ((this.onEndAddGestureDataDelegate == null)) {
                this.onEndAddGestureDataDelegate = new EndOperationDelegate(this.OnEndAddGestureData);
            }
            if ((this.onAddGestureDataCompletedDelegate == null)) {
                this.onAddGestureDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddGestureDataCompleted);
            }
            base.InvokeAsync(this.onBeginAddGestureDataDelegate, new object[] {
                        userName,
                        projectName,
                        gestureName,
                        gestureData}, this.onEndAddGestureDataDelegate, this.onAddGestureDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.GetProjectsByUserResponse Framework.DataService.GestureServiceSoap.GetProjectsByUser(Framework.DataService.GetProjectsByUserRequest request) {
            return base.Channel.GetProjectsByUser(request);
        }
        
        public Framework.DataService.ProjectInfo[] GetProjectsByUser(string userName) {
            Framework.DataService.GetProjectsByUserRequest inValue = new Framework.DataService.GetProjectsByUserRequest();
            inValue.Body = new Framework.DataService.GetProjectsByUserRequestBody();
            inValue.Body.userName = userName;
            Framework.DataService.GetProjectsByUserResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).GetProjectsByUser(inValue);
            return retVal.Body.GetProjectsByUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Framework.DataService.GestureServiceSoap.BeginGetProjectsByUser(Framework.DataService.GetProjectsByUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectsByUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProjectsByUser(string userName, System.AsyncCallback callback, object asyncState) {
            Framework.DataService.GetProjectsByUserRequest inValue = new Framework.DataService.GetProjectsByUserRequest();
            inValue.Body = new Framework.DataService.GetProjectsByUserRequestBody();
            inValue.Body.userName = userName;
            return ((Framework.DataService.GestureServiceSoap)(this)).BeginGetProjectsByUser(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.GetProjectsByUserResponse Framework.DataService.GestureServiceSoap.EndGetProjectsByUser(System.IAsyncResult result) {
            return base.Channel.EndGetProjectsByUser(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Framework.DataService.ProjectInfo[] EndGetProjectsByUser(System.IAsyncResult result) {
            Framework.DataService.GetProjectsByUserResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).EndGetProjectsByUser(result);
            return retVal.Body.GetProjectsByUserResult;
        }
        
        private System.IAsyncResult OnBeginGetProjectsByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return this.BeginGetProjectsByUser(userName, callback, asyncState);
        }
        
        private object[] OnEndGetProjectsByUser(System.IAsyncResult result) {
            Framework.DataService.ProjectInfo[] retVal = this.EndGetProjectsByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectsByUserCompleted(object state) {
            if ((this.GetProjectsByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectsByUserCompleted(this, new GetProjectsByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectsByUserAsync(string userName) {
            this.GetProjectsByUserAsync(userName, null);
        }
        
        public void GetProjectsByUserAsync(string userName, object userState) {
            if ((this.onBeginGetProjectsByUserDelegate == null)) {
                this.onBeginGetProjectsByUserDelegate = new BeginOperationDelegate(this.OnBeginGetProjectsByUser);
            }
            if ((this.onEndGetProjectsByUserDelegate == null)) {
                this.onEndGetProjectsByUserDelegate = new EndOperationDelegate(this.OnEndGetProjectsByUser);
            }
            if ((this.onGetProjectsByUserCompletedDelegate == null)) {
                this.onGetProjectsByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectsByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectsByUserDelegate, new object[] {
                        userName}, this.onEndGetProjectsByUserDelegate, this.onGetProjectsByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.GetGestureDataResponse Framework.DataService.GestureServiceSoap.GetGestureData(Framework.DataService.GetGestureDataRequest request) {
            return base.Channel.GetGestureData(request);
        }
        
        public string GetGestureData(string userName, string projectName, string gestureName) {
            Framework.DataService.GetGestureDataRequest inValue = new Framework.DataService.GetGestureDataRequest();
            inValue.Body = new Framework.DataService.GetGestureDataRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.projectName = projectName;
            inValue.Body.gestureName = gestureName;
            Framework.DataService.GetGestureDataResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).GetGestureData(inValue);
            return retVal.Body.GetGestureDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Framework.DataService.GestureServiceSoap.BeginGetGestureData(Framework.DataService.GetGestureDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGestureData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGestureData(string userName, string projectName, string gestureName, System.AsyncCallback callback, object asyncState) {
            Framework.DataService.GetGestureDataRequest inValue = new Framework.DataService.GetGestureDataRequest();
            inValue.Body = new Framework.DataService.GetGestureDataRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.projectName = projectName;
            inValue.Body.gestureName = gestureName;
            return ((Framework.DataService.GestureServiceSoap)(this)).BeginGetGestureData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.GetGestureDataResponse Framework.DataService.GestureServiceSoap.EndGetGestureData(System.IAsyncResult result) {
            return base.Channel.EndGetGestureData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetGestureData(System.IAsyncResult result) {
            Framework.DataService.GetGestureDataResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).EndGetGestureData(result);
            return retVal.Body.GetGestureDataResult;
        }
        
        private System.IAsyncResult OnBeginGetGestureData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string projectName = ((string)(inValues[1]));
            string gestureName = ((string)(inValues[2]));
            return this.BeginGetGestureData(userName, projectName, gestureName, callback, asyncState);
        }
        
        private object[] OnEndGetGestureData(System.IAsyncResult result) {
            string retVal = this.EndGetGestureData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGestureDataCompleted(object state) {
            if ((this.GetGestureDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGestureDataCompleted(this, new GetGestureDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGestureDataAsync(string userName, string projectName, string gestureName) {
            this.GetGestureDataAsync(userName, projectName, gestureName, null);
        }
        
        public void GetGestureDataAsync(string userName, string projectName, string gestureName, object userState) {
            if ((this.onBeginGetGestureDataDelegate == null)) {
                this.onBeginGetGestureDataDelegate = new BeginOperationDelegate(this.OnBeginGetGestureData);
            }
            if ((this.onEndGetGestureDataDelegate == null)) {
                this.onEndGetGestureDataDelegate = new EndOperationDelegate(this.OnEndGetGestureData);
            }
            if ((this.onGetGestureDataCompletedDelegate == null)) {
                this.onGetGestureDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGestureDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetGestureDataDelegate, new object[] {
                        userName,
                        projectName,
                        gestureName}, this.onEndGetGestureDataDelegate, this.onGetGestureDataCompletedDelegate, userState);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDelete(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDelete(System.IAsyncResult result) {
            base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginDelete(id, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            this.EndDelete(result);
            return null;
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(int id) {
            this.DeleteAsync(id, null);
        }
        
        public void DeleteAsync(int id, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        id}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.IsUserNameUniqueResponse Framework.DataService.GestureServiceSoap.IsUserNameUnique(Framework.DataService.IsUserNameUniqueRequest request) {
            return base.Channel.IsUserNameUnique(request);
        }
        
        public bool IsUserNameUnique(string userName) {
            Framework.DataService.IsUserNameUniqueRequest inValue = new Framework.DataService.IsUserNameUniqueRequest();
            inValue.Body = new Framework.DataService.IsUserNameUniqueRequestBody();
            inValue.Body.userName = userName;
            Framework.DataService.IsUserNameUniqueResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).IsUserNameUnique(inValue);
            return retVal.Body.IsUserNameUniqueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Framework.DataService.GestureServiceSoap.BeginIsUserNameUnique(Framework.DataService.IsUserNameUniqueRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsUserNameUnique(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsUserNameUnique(string userName, System.AsyncCallback callback, object asyncState) {
            Framework.DataService.IsUserNameUniqueRequest inValue = new Framework.DataService.IsUserNameUniqueRequest();
            inValue.Body = new Framework.DataService.IsUserNameUniqueRequestBody();
            inValue.Body.userName = userName;
            return ((Framework.DataService.GestureServiceSoap)(this)).BeginIsUserNameUnique(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.IsUserNameUniqueResponse Framework.DataService.GestureServiceSoap.EndIsUserNameUnique(System.IAsyncResult result) {
            return base.Channel.EndIsUserNameUnique(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsUserNameUnique(System.IAsyncResult result) {
            Framework.DataService.IsUserNameUniqueResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).EndIsUserNameUnique(result);
            return retVal.Body.IsUserNameUniqueResult;
        }
        
        private System.IAsyncResult OnBeginIsUserNameUnique(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return this.BeginIsUserNameUnique(userName, callback, asyncState);
        }
        
        private object[] OnEndIsUserNameUnique(System.IAsyncResult result) {
            bool retVal = this.EndIsUserNameUnique(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsUserNameUniqueCompleted(object state) {
            if ((this.IsUserNameUniqueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsUserNameUniqueCompleted(this, new IsUserNameUniqueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsUserNameUniqueAsync(string userName) {
            this.IsUserNameUniqueAsync(userName, null);
        }
        
        public void IsUserNameUniqueAsync(string userName, object userState) {
            if ((this.onBeginIsUserNameUniqueDelegate == null)) {
                this.onBeginIsUserNameUniqueDelegate = new BeginOperationDelegate(this.OnBeginIsUserNameUnique);
            }
            if ((this.onEndIsUserNameUniqueDelegate == null)) {
                this.onEndIsUserNameUniqueDelegate = new EndOperationDelegate(this.OnEndIsUserNameUnique);
            }
            if ((this.onIsUserNameUniqueCompletedDelegate == null)) {
                this.onIsUserNameUniqueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsUserNameUniqueCompleted);
            }
            base.InvokeAsync(this.onBeginIsUserNameUniqueDelegate, new object[] {
                        userName}, this.onEndIsUserNameUniqueDelegate, this.onIsUserNameUniqueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.LastUpdatedAtResponse Framework.DataService.GestureServiceSoap.LastUpdatedAt(Framework.DataService.LastUpdatedAtRequest request) {
            return base.Channel.LastUpdatedAt(request);
        }
        
        public System.DateTime LastUpdatedAt(string userName) {
            Framework.DataService.LastUpdatedAtRequest inValue = new Framework.DataService.LastUpdatedAtRequest();
            inValue.Body = new Framework.DataService.LastUpdatedAtRequestBody();
            inValue.Body.userName = userName;
            Framework.DataService.LastUpdatedAtResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).LastUpdatedAt(inValue);
            return retVal.Body.LastUpdatedAtResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Framework.DataService.GestureServiceSoap.BeginLastUpdatedAt(Framework.DataService.LastUpdatedAtRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLastUpdatedAt(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLastUpdatedAt(string userName, System.AsyncCallback callback, object asyncState) {
            Framework.DataService.LastUpdatedAtRequest inValue = new Framework.DataService.LastUpdatedAtRequest();
            inValue.Body = new Framework.DataService.LastUpdatedAtRequestBody();
            inValue.Body.userName = userName;
            return ((Framework.DataService.GestureServiceSoap)(this)).BeginLastUpdatedAt(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Framework.DataService.LastUpdatedAtResponse Framework.DataService.GestureServiceSoap.EndLastUpdatedAt(System.IAsyncResult result) {
            return base.Channel.EndLastUpdatedAt(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndLastUpdatedAt(System.IAsyncResult result) {
            Framework.DataService.LastUpdatedAtResponse retVal = ((Framework.DataService.GestureServiceSoap)(this)).EndLastUpdatedAt(result);
            return retVal.Body.LastUpdatedAtResult;
        }
        
        private System.IAsyncResult OnBeginLastUpdatedAt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return this.BeginLastUpdatedAt(userName, callback, asyncState);
        }
        
        private object[] OnEndLastUpdatedAt(System.IAsyncResult result) {
            System.DateTime retVal = this.EndLastUpdatedAt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLastUpdatedAtCompleted(object state) {
            if ((this.LastUpdatedAtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LastUpdatedAtCompleted(this, new LastUpdatedAtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LastUpdatedAtAsync(string userName) {
            this.LastUpdatedAtAsync(userName, null);
        }
        
        public void LastUpdatedAtAsync(string userName, object userState) {
            if ((this.onBeginLastUpdatedAtDelegate == null)) {
                this.onBeginLastUpdatedAtDelegate = new BeginOperationDelegate(this.OnBeginLastUpdatedAt);
            }
            if ((this.onEndLastUpdatedAtDelegate == null)) {
                this.onEndLastUpdatedAtDelegate = new EndOperationDelegate(this.OnEndLastUpdatedAt);
            }
            if ((this.onLastUpdatedAtCompletedDelegate == null)) {
                this.onLastUpdatedAtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLastUpdatedAtCompleted);
            }
            base.InvokeAsync(this.onBeginLastUpdatedAtDelegate, new object[] {
                        userName}, this.onEndLastUpdatedAtDelegate, this.onLastUpdatedAtCompletedDelegate, userState);
        }
    }
}
