<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gestures.Moles</name>
    </assembly>
    <members>
        <member name="T:Gestures.ReturnTypes.Moles.MBoundingBox">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.BoundingBox"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MBoundingBox.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MBoundingBox.#ctor(Gestures.ReturnTypes.BoundingBox)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MBoundingBox.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MBoundingBox.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MBoundingBox.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.BoundingBox.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MBoundingBox.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.BoundingBoxCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.#ctor(Gestures.ReturnTypes.BoundingBoxCalculator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.Bind(Gestures.ReturnTypes.IReturnTypeCalculator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.BoundingBoxCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.BoundingBoxCalculator.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MBoundingBoxCalculator.AllInstances.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.BoundingBoxCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath">
            <summary>Mole type of <see cref="T:Gestures.Feedbacks.TouchFeedbacks.BubblesPath"/>
            .</summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.#ctor(Gestures.Feedbacks.TouchFeedbacks.BubblesPath)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.Bind(Gestures.Feedbacks.TouchFeedbacks.ITouchFeedback)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.CreateProxyObjectTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.CreateProxyObject(T:Gestures.Objects.TouchInfo)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.CreateProxyObjectsListOfTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.CreateProxyObjects(System.Collections.Generic.List`1{T:Gestures.Objects.TouchInfo})"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.Dispose">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.Dispose"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.FrameChangedFrameInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.FrameChanged(T:Gestures.Objects.FrameInfo)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.InitPanelDispatcher">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.Init(T:System.Windows.Controls.Panel,T:System.Windows.Threading.Dispatcher)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.UpdateUIObject">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.UpdateUI(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath._UpdateUIb__0">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.&lt;UpdateUI&gt;b__0"/>
            </summary>
        </member>
        <member name="T:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.AllInstances.CreateProxyObjectTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.CreateProxyObject(T:Gestures.Objects.TouchInfo)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.AllInstances.CreateProxyObjectsListOfTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.CreateProxyObjects(System.Collections.Generic.List`1{T:Gestures.Objects.TouchInfo})"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.AllInstances.Dispose">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.Dispose"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.AllInstances.FrameChangedFrameInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.FrameChanged(T:Gestures.Objects.FrameInfo)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.AllInstances.InitPanelDispatcher">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.Init(T:System.Windows.Controls.Panel,T:System.Windows.Threading.Dispatcher)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.AllInstances.UpdateUIObject">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.UpdateUI(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.MBubblesPath.AllInstances._UpdateUIb__0">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.BubblesPath.&lt;UpdateUI&gt;b__0"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MClosedLoop">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.ClosedLoop"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MClosedLoop.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MClosedLoop.#ctor(Gestures.Rules.Objects.ClosedLoop)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MClosedLoop.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MClosedLoop.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.ClosedLoop.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.ClosedLoop.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.StateGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.ClosedLoop.State"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.StateSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.ClosedLoop.State"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.ClosedLoop.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.ClosedLoop.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MClosedLoop.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.ClosedLoop.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.AllInstances.StateGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.ClosedLoop.State"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.AllInstances.StateSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.ClosedLoop.State"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.ClosedLoop.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MClosedLoop.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.ClosedLoop.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.ClosedLoopValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.#ctor(Gestures.Rules.RuleValidators.ClosedLoopValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.IsClosedLoopTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.IsClosedLoop(T:Gestures.Objects.TouchPoint2)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.AllInstances.IsClosedLoopTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.IsClosedLoop(T:Gestures.Objects.TouchPoint2)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MClosedLoopValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.ClosedLoopValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Combinatorial.Moles.MCombinations">
            <summary>Mole type of <see cref="T:Combinatorial.Combinations"/>
            .</summary>
        </member>
        <member name="M:Combinatorial.Moles.MCombinations.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Combinatorial.Moles.MCombinations.#ctor(Combinatorial.Combinations)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Combinatorial.Moles.MCombinations.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Combinatorial.Moles.MCombinations.Bind(System.Collections.IEnumerator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinations.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinations.ConstructorArrayInt32">
            <summary>Sets the mole of <see cref="M:Combinatorial.Combinations.#ctor(T:System.Array,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinations.ConstructorIEnumeratorInt32">
            <summary>Sets the mole of <see cref="M:Combinatorial.Combinations.#ctor(T:System.Collections.IEnumerator,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinations.ConstructorTouchPoint2ArrayInt32">
            <summary>Sets the mole of <see cref="M:Combinatorial.Combinations.#ctor(T:Gestures.Objects.TouchPoint2[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinations.NextIndecesBoolean">
            <summary>Sets the mole of <see cref="M:Combinatorial.Combinations.NextIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="T:Combinatorial.Moles.MCombinations.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinations.AllInstances.NextIndecesBoolean">
            <summary>Sets the mole of <see cref="M:Combinatorial.Combinations.NextIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="T:Combinatorial.Moles.MCombinatorialBase">
            <summary>Mole type of <see cref="T:Combinatorial.CombinatorialBase"/>
            .</summary>
        </member>
        <member name="M:Combinatorial.Moles.MCombinatorialBase.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Combinatorial.Moles.MCombinatorialBase.#ctor(Combinatorial.CombinatorialBase)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Combinatorial.Moles.MCombinatorialBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Combinatorial.Moles.MCombinatorialBase.Bind(System.Collections.IEnumerator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.ConstructorArrayInt32">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.#ctor(T:System.Array,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.ConstructorIEnumeratorInt32">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.#ctor(T:System.Collections.IEnumerator,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.ConstructorTouchPoint2ArrayInt32">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.#ctor(T:Gestures.Objects.TouchPoint2[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.CurrentGet">
            <summary>Sets the mole of <see cref="P:Combinatorial.CombinatorialBase.Current"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.CurrentIndecesGet">
            <summary>Sets the mole of <see cref="P:Combinatorial.CombinatorialBase.CurrentIndeces"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.CurrentItems">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.CurrentItems"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.DoArgumentCheckInt32Int32">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.DoArgumentCheck(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.FirstIndeces">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.FirstIndeces"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.FirstIndecesBoolean">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.FirstIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.MoveNext">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.MoveNext"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.NextIndeces">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.NextIndeces"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.NextItems">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.NextItems"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.Reset">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.Reset"/>
            </summary>
        </member>
        <member name="T:Combinatorial.Moles.MCombinatorialBase.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.CurrentGet">
            <summary>Sets the mole of <see cref="P:Combinatorial.CombinatorialBase.Current"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.CurrentIndecesGet">
            <summary>Sets the mole of <see cref="P:Combinatorial.CombinatorialBase.CurrentIndeces"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.CurrentItems">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.CurrentItems"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.DoArgumentCheckInt32Int32">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.DoArgumentCheck(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.FirstIndeces">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.FirstIndeces"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.FirstIndecesBoolean">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.FirstIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.MoveNext">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.MoveNext"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.NextIndeces">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.NextIndeces"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.NextItems">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.NextItems"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.MCombinatorialBase.AllInstances.Reset">
            <summary>Sets the mole of <see cref="M:Combinatorial.CombinatorialBase.Reset"/>
            </summary>
        </member>
        <member name="T:Gestures.Utility.Moles.MCommonHelperMethods">
            <summary>Mole type of <see cref="T:Gestures.Utility.CommonHelperMethods"/>
            .</summary>
        </member>
        <member name="M:Gestures.Utility.Moles.MCommonHelperMethods.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Utility.Moles.MCommonHelperMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MCommonHelperMethods.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MCommonHelperMethods.IsTypeOfTypeType">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.CommonHelperMethods.IsTypeOf(T:System.Type,T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MCommonHelperMethods.ToPointStylusPoint">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.CommonHelperMethods.ToPoint(T:System.Windows.Input.StylusPoint)"/>
            </summary>
        </member>
        <member name="T:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea">
            <summary>Mole type of <see cref="T:ShapeRecognizers.ConvexHull.ConvexHullArea"/>
            .</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.#ctor(ShapeRecognizers.ConvexHull.ConvexHullArea)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.CalculateAreaPointArray">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.ConvexHullArea.CalculateArea(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.Constructor">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.ConvexHullArea.#ctor"/>
            </summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.GetAreaPointArray">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.ConvexHullArea.GetArea(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.GetConvexHullPointsPointArray">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.ConvexHullArea.GetConvexHullPoints(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.centroidPointArray">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.ConvexHullArea.centroid(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.printPointArray">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.ConvexHullArea.print(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="T:ShapeRecognizers.ConvexHull.Moles.MConvexHullArea.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:ShapeRecognizers.ConvexHull.Moles.MConvexhull">
            <summary>Mole type of <see cref="T:ShapeRecognizers.ConvexHull.Convexhull"/>
            .</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.MConvexhull.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.MConvexhull.#ctor(ShapeRecognizers.ConvexHull.Convexhull)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.MConvexhull.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexhull.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexhull.Constructor">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.Convexhull.#ctor"/>
            </summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MConvexhull.convexhullPointArray">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.Convexhull.convexhull(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="T:ShapeRecognizers.ConvexHull.Moles.MConvexhull.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.DistanceBetweenPoints"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.#ctor(Gestures.Rules.Objects.DistanceBetweenPoints)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.BehaviourGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Behaviour"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.BehaviourSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Behaviour"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.DistanceBetweenPoints.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.DistanceBetweenPoints.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MaxGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MaxSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MinGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MinSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.DistanceBetweenPoints.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.DistanceBetweenPoints.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.BehaviourGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Behaviour"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.BehaviourSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Behaviour"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.DistanceBetweenPoints.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.MaxGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.MaxSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.MinGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.MinSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.DistanceBetweenPoints.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.DistanceBetweenPoints.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.DistanceBetweenPoints.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MBehaviourTypes">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.DistanceBetweenPoints.BehaviourTypes"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MBehaviourTypes.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MBehaviourTypes.#ctor(Gestures.Rules.Objects.DistanceBetweenPoints.BehaviourTypes)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MBehaviourTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MBehaviourTypes.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MBehaviourTypes.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.DistanceBetweenPoints.BehaviourTypes.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MDistanceBetweenPoints.MBehaviourTypes.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.#ctor(Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.IsValidTouchPoint2Array">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.IsValid(T:Gestures.Objects.TouchPoint2[])"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.AllInstances.IsValidTouchPoint2Array">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.IsValid(T:Gestures.Objects.TouchPoint2[])"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MDistanceBetweenPointsValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MDistanceChanged">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.DistanceChanged"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MDistanceChanged.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MDistanceChanged.#ctor(Gestures.ReturnTypes.DistanceChanged)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MDistanceChanged.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MDistanceChanged.Bind(Gestures.ReturnTypes.IReturnType)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.DistanceChanged.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.DeltaGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.DistanceChanged.Delta"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.DeltaSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.DistanceChanged.Delta"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.DistanceGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.DistanceChanged.Distance"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.DistanceSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.DistanceChanged.Distance"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MDistanceChanged.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.AllInstances.DeltaGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.DistanceChanged.Delta"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.AllInstances.DeltaSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.DistanceChanged.Delta"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.AllInstances.DistanceGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.DistanceChanged.Distance"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChanged.AllInstances.DistanceSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.DistanceChanged.Distance"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.DistanceChangedCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.#ctor(Gestures.ReturnTypes.DistanceChangedCalculator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.Bind(Gestures.ReturnTypes.IReturnTypeCalculator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.DistanceChangedCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.DistanceChangedCalculator.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MDistanceChangedCalculator.AllInstances.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.DistanceChangedCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Framework.ShapeRecognizers.Moles.MEllipseRecognizer">
            <summary>Mole type of <see cref="T:Framework.ShapeRecognizers.EllipseRecognizer"/>
            .</summary>
        </member>
        <member name="M:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.#ctor(Framework.ShapeRecognizers.EllipseRecognizer)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.Constructor">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.#ctor"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.ConstructorPointArray">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.#ctor(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetConvexHullArea">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetConvexHullArea"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetConvexHullPoints">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetConvexHullPoints"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetDistancePointPoint">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetDistance(T:System.Windows.Point,T:System.Windows.Point)"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetEnclosingRecHeight">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetEnclosingRecHeight"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetEnclosingRecWidth">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetEnclosingRecWidth"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetLength">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetLength"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetLengthOfConvexHull">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetLengthOfConvexHull"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetLengthPointArray">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetLength(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetMaxX">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetMaxX"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetMaxY">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetMaxY"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetMinX">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetMinX"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.GetMinY">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetMinY"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.IsMatch">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.IsMatch"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.IsMatchPointArray">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.IsMatch(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.IsTwoEndMet">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.IsTwoEndMet"/>
            </summary>
        </member>
        <member name="T:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetConvexHullArea">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetConvexHullArea"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetConvexHullPoints">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetConvexHullPoints"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetDistancePointPoint">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetDistance(T:System.Windows.Point,T:System.Windows.Point)"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetEnclosingRecHeight">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetEnclosingRecHeight"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetEnclosingRecWidth">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetEnclosingRecWidth"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetLength">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetLength"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetLengthOfConvexHull">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetLengthOfConvexHull"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetLengthPointArray">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetLength(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetMaxX">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetMaxX"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetMaxY">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetMaxY"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetMinX">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetMinX"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.GetMinY">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.GetMinY"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.IsMatch">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.IsMatch"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.IsMatchPointArray">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.IsMatch(T:System.Windows.Point[])"/>
            </summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.MEllipseRecognizer.AllInstances.IsTwoEndMet">
            <summary>Sets the mole of <see cref="M:Framework.ShapeRecognizers.EllipseRecognizer.IsTwoEndMet"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MEnclosedArea">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.EnclosedArea"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MEnclosedArea.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MEnclosedArea.#ctor(Gestures.Rules.Objects.EnclosedArea)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MEnclosedArea.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MEnclosedArea.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.EnclosedArea.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.EnclosedArea.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.MaxGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.EnclosedArea.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.MaxSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.EnclosedArea.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.MinGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.EnclosedArea.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.MinSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.EnclosedArea.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.EnclosedArea.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.EnclosedArea.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MEnclosedArea.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.EnclosedArea.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.AllInstances.MaxGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.EnclosedArea.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.AllInstances.MaxSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.EnclosedArea.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.AllInstances.MinGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.EnclosedArea.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.AllInstances.MinSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.EnclosedArea.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.EnclosedArea.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MEnclosedArea.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.EnclosedArea.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.EnclosedAreaValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.#ctor(Gestures.Rules.RuleValidators.EnclosedAreaValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.IsEnclosedAreaWithinRangeStylusPointCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.IsEnclosedAreaWithinRange(T:System.Windows.Input.StylusPointCollection)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.AllInstances.IsEnclosedAreaWithinRangeStylusPointCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.IsEnclosedAreaWithinRange(T:System.Windows.Input.StylusPointCollection)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MEnclosedAreaValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.EnclosedAreaValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MFrameInfo">
            <summary>Mole type of <see cref="T:Gestures.Objects.FrameInfo"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MFrameInfo.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MFrameInfo.#ctor(Gestures.Objects.FrameInfo)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MFrameInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.FrameInfo.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.TimeStampGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.TimeStamp"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.TimeStampSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.TimeStamp"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.TouchesGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.Touches"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.TouchesSetListOfTouchInfo">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.Touches"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.WaitTimeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.WaitTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.WaitTimeSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.WaitTime"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MFrameInfo.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.AllInstances.TimeStampGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.TimeStamp"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.AllInstances.TimeStampSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.TimeStamp"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.AllInstances.TouchesGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.Touches"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.AllInstances.TouchesSetListOfTouchInfo">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.Touches"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.AllInstances.WaitTimeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.WaitTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MFrameInfo.AllInstances.WaitTimeSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.FrameInfo.WaitTime"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MGesture">
            <summary>Mole type of <see cref="T:Gestures.Objects.Gesture"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MGesture.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MGesture.#ctor(Gestures.Objects.Gesture)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MGesture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGesture.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGesture.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.Gesture.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGesture.NameGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.Gesture.Name"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGesture.NameSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.Gesture.Name"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MGesture.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGesture.AllInstances.NameGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.Gesture.Name"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGesture.AllInstances.NameSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.Gesture.Name"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MGestureInfo">
            <summary>Mole type of <see cref="T:Gestures.Objects.GestureInfo"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MGestureInfo.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MGestureInfo.#ctor(Gestures.Objects.GestureInfo)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MGestureInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGestureInfo.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGestureInfo.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.GestureInfo.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGestureInfo.FramesGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.GestureInfo.Frames"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGestureInfo.FramesSetListOfFrameInfo">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.GestureInfo.Frames"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MGestureInfo.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGestureInfo.AllInstances.FramesGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.GestureInfo.Frames"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MGestureInfo.AllInstances.FramesSetListOfFrameInfo">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.GestureInfo.Frames"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.MGestureToken">
            <summary>Mole type of <see cref="T:Gestures.Objects.LanguageTokens.GestureToken"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MGestureToken.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MGestureToken.#ctor(Gestures.Objects.LanguageTokens.GestureToken)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MGestureToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.ConditionsGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.Conditions"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.ConditionsSetListOfIRuleData">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.Conditions"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.LanguageTokens.GestureToken.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.PreConditionsGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.PreConditions"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.PreConditionsSetListOfIRuleData">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.PreConditions"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.ReturnsGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.Returns"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.ReturnsSetListOfReturnToken">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.Returns"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.MGestureToken.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.AllInstances.ConditionsGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.Conditions"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.AllInstances.ConditionsSetListOfIRuleData">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.Conditions"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.AllInstances.PreConditionsGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.PreConditions"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.AllInstances.PreConditionsSetListOfIRuleData">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.PreConditions"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.AllInstances.ReturnsGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.Returns"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MGestureToken.AllInstances.ReturnsSetListOfReturnToken">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.GestureToken.Returns"/>
            </summary>
        </member>
        <member name="T:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea">
            <summary>Mole type of <see cref="T:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea"/>
            .</summary>
        </member>
        <member name="M:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.#ctor(Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.Bind(Gestures.Feedbacks.GestureFeedbacks.IGestureFeedback)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.DrawLassoAreaTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.DrawLassoArea(T:Gestures.ReturnTypes.TouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.RenderUIDispatcherCanvasListOfIReturnType">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.RenderUI(T:System.Windows.Threading.Dispatcher,T:System.Windows.Controls.Canvas,System.Collections.Generic.List`1{T:Gestures.ReturnTypes.IReturnType})"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.StartAnimation">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.StartAnimation"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.StopAnimation">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.StopAnimation"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.UpdateUIObject">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.UpdateUI(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea._UpdateUIb__0">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.&lt;UpdateUI&gt;b__0"/>
            </summary>
        </member>
        <member name="T:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.AllInstances.DrawLassoAreaTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.DrawLassoArea(T:Gestures.ReturnTypes.TouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.AllInstances.RenderUIDispatcherCanvasListOfIReturnType">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.RenderUI(T:System.Windows.Threading.Dispatcher,T:System.Windows.Controls.Canvas,System.Collections.Generic.List`1{T:Gestures.ReturnTypes.IReturnType})"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.AllInstances.StartAnimation">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.StartAnimation"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.AllInstances.StopAnimation">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.StopAnimation"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.AllInstances.UpdateUIObject">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.UpdateUI(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.MHighlightSelectedArea.AllInstances._UpdateUIb__0">
            <summary>Sets the mole of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea.&lt;UpdateUI&gt;b__0"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MInfo">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.Info"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MInfo.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MInfo.#ctor(Gestures.ReturnTypes.Info)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MInfo.Bind(Gestures.ReturnTypes.IReturnType)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfo.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfo.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.Info.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfo.MessageGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Info.Message"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfo.MessageSetString">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Info.Message"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MInfo.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfo.AllInstances.MessageGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Info.Message"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfo.AllInstances.MessageSetString">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Info.Message"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MInfoCalculator">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.InfoCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MInfoCalculator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MInfoCalculator.#ctor(Gestures.ReturnTypes.InfoCalculator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MInfoCalculator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MInfoCalculator.Bind(Gestures.ReturnTypes.IReturnTypeCalculator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfoCalculator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfoCalculator.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.InfoCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfoCalculator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.InfoCalculator.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MInfoCalculator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MInfoCalculator.AllInstances.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.InfoCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MIntersectTouchPath">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.IntersectTouchPath"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MIntersectTouchPath.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MIntersectTouchPath.#ctor(Gestures.Rules.Objects.IntersectTouchPath)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MIntersectTouchPath.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MIntersectTouchPath.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.IntersectTouchPath.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.IntersectTouchPath.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.ResultGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.IntersectTouchPath.Result"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.ResultSetBoolean">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.IntersectTouchPath.Result"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.IntersectTouchPath.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.IntersectTouchPath.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MIntersectTouchPath.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.IntersectTouchPath.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.AllInstances.ResultGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.IntersectTouchPath.Result"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.AllInstances.ResultSetBoolean">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.IntersectTouchPath.Result"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.IntersectTouchPath.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MIntersectTouchPath.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.IntersectTouchPath.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.IntersectTouchPathValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.#ctor(Gestures.Rules.RuleValidators.IntersectTouchPathValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MIntersectTouchPathValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.IntersectTouchPathValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.MInvalidDataSetException">
            <summary>Mole type of <see cref="T:Gestures.Exceptions.InvalidDataSetException"/>
            .</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MInvalidDataSetException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MInvalidDataSetException.#ctor(Gestures.Exceptions.InvalidDataSetException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MInvalidDataSetException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MInvalidDataSetException.Bind(System.Runtime.InteropServices._Exception)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MInvalidDataSetException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.MInvalidDataSetException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.MInvalidDataSetException.ConstructorString">
            <summary>Sets the mole of <see cref="M:Gestures.Exceptions.InvalidDataSetException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.MInvalidDataSetException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException">
            <summary>Mole type of <see cref="T:Gestures.Exceptions.LanguageSyntaxErrorException"/>
            .</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException.#ctor(Gestures.Exceptions.LanguageSyntaxErrorException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException.Bind(System.Runtime.InteropServices._Exception)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException.ConstructorString">
            <summary>Sets the mole of <see cref="M:Gestures.Exceptions.LanguageSyntaxErrorException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.MLanguageSyntaxErrorException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.MLanguageToken">
            <summary>Mole type of <see cref="T:Gestures.Objects.LanguageTokens.LanguageToken"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.#ctor(Gestures.Objects.LanguageTokens.LanguageToken)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.LanguageTokens.LanguageToken.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.NameGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.LanguageToken.Name"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.NameSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.LanguageToken.Name"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.AllInstances.NameGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.LanguageToken.Name"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MLanguageToken.AllInstances.NameSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.LanguageToken.Name"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MOnSameObject">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.OnSameObject"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MOnSameObject.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MOnSameObject.#ctor(Gestures.Rules.Objects.OnSameObject)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MOnSameObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MOnSameObject.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.ConditionGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.OnSameObject.Condition"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.ConditionSetBoolean">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.OnSameObject.Condition"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.OnSameObject.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.OnSameObject.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.OnSameObject.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.OnSameObject.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MOnSameObject.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.AllInstances.ConditionGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.OnSameObject.Condition"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.AllInstances.ConditionSetBoolean">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.OnSameObject.Condition"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.OnSameObject.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.OnSameObject.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MOnSameObject.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.OnSameObject.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.OnSameObjectValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.#ctor(Gestures.Rules.RuleValidators.OnSameObjectValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MOnSameObjectValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.OnSameObjectValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MPosition">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.Position"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPosition.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPosition.#ctor(Gestures.ReturnTypes.Position)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPosition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPosition.Bind(Gestures.ReturnTypes.IReturnType)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.Position.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.ToString">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.Position.ToString"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.XGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Position.X"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.XSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Position.X"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.YGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Position.Y"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.YSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Position.Y"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MPosition.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.Position.ToString"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.AllInstances.XGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Position.X"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.AllInstances.XSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Position.X"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.AllInstances.YGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Position.Y"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPosition.AllInstances.YSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.Position.Y"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MPositionCalculator">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.PositionCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionCalculator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionCalculator.#ctor(Gestures.ReturnTypes.PositionCalculator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionCalculator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionCalculator.Bind(Gestures.ReturnTypes.IReturnTypeCalculator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionCalculator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionCalculator.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionCalculator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionCalculator.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MPositionCalculator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionCalculator.AllInstances.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MPositionChanged">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.PositionChanged"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionChanged.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionChanged.#ctor(Gestures.ReturnTypes.PositionChanged)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionChanged.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionChanged.Bind(Gestures.ReturnTypes.IReturnType)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionChanged.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.ToString">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionChanged.ToString"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.XGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.PositionChanged.X"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.XSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.PositionChanged.X"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.YGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.PositionChanged.Y"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.YSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.PositionChanged.Y"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MPositionChanged.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionChanged.ToString"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.AllInstances.XGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.PositionChanged.X"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.AllInstances.XSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.PositionChanged.X"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.AllInstances.YGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.PositionChanged.Y"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChanged.AllInstances.YSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.PositionChanged.Y"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MPositionChangedCalculator">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.PositionChangedCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.#ctor(Gestures.ReturnTypes.PositionChangedCalculator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.Bind(Gestures.ReturnTypes.IReturnTypeCalculator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionChangedCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionChangedCalculator.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MPositionChangedCalculator.AllInstances.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.PositionChangedCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.MReturnToken">
            <summary>Mole type of <see cref="T:Gestures.Objects.LanguageTokens.ReturnToken"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MReturnToken.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MReturnToken.#ctor(Gestures.Objects.LanguageTokens.ReturnToken)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MReturnToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MReturnToken.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MReturnToken.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.LanguageTokens.ReturnToken.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.MReturnToken.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MReturnTypeHelperExtensions">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.ReturnTypeHelperExtensions"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MReturnTypeHelperExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MReturnTypeHelperExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MReturnTypeHelperExtensions.GetListOfIReturnType``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.List{Gestures.ReturnTypes.IReturnType},``0})">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.ReturnTypeHelperExtensions.Get``1(System.Collections.Generic.List`1{T:Gestures.ReturnTypes.IReturnType})"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MReturnTypeHelperExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MReturnTypeInfo">
            <summary>Mole type of <see cref="T:Gestures.Objects.ReturnTypeInfo"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfo.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfo.#ctor(Gestures.Objects.ReturnTypeInfo)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.AdditionalInfoGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.AdditionalInfo"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.AdditionalInfoSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.AdditionalInfo"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.CalculatorTypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.CalculatorType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.CalculatorTypeSetType">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.CalculatorType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ReturnTypeInfo.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.ReturnTypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.ReturnType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.ReturnTypeSetType">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.ReturnType"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MReturnTypeInfo.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.AllInstances.AdditionalInfoGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.AdditionalInfo"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.AllInstances.AdditionalInfoSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.AdditionalInfo"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.AllInstances.CalculatorTypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.CalculatorType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.AllInstances.CalculatorTypeSetType">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.CalculatorType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.AllInstances.ReturnTypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.ReturnType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfo.AllInstances.ReturnTypeSetType">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.ReturnTypeInfo.ReturnType"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MReturnTypeInfoCollection">
            <summary>Mole type of <see cref="T:Gestures.Objects.ReturnTypeInfoCollection"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.#ctor(Gestures.Objects.ReturnTypeInfoCollection)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.Bind(System.Collections.Generic.ICollection{Gestures.Objects.ReturnTypeInfo})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.Bind(System.Collections.Generic.IEnumerable{Gestures.Objects.ReturnTypeInfo})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MReturnTypeInfoCollection.Bind(System.Collections.Generic.IList{Gestures.Objects.ReturnTypeInfo})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfoCollection.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ReturnTypeInfoCollection.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfoCollection.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ReturnTypeInfoCollection.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MReturnTypeInfoCollection.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MReturnTypeInfoCollection.AllInstances.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ReturnTypeInfoCollection.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MRuleCollection">
            <summary>Mole type of <see cref="T:Gestures.Objects.RuleCollection"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.#ctor(Gestures.Objects.RuleCollection)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.Bind(System.Collections.Generic.ICollection{Gestures.Rules.RuleValidators.IRuleValidator})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.Bind(System.Collections.Generic.IEnumerable{Gestures.Rules.RuleValidators.IRuleValidator})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MRuleCollection.Bind(System.Collections.Generic.IList{Gestures.Rules.RuleValidators.IRuleValidator})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MRuleCollection.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MRuleCollection.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.RuleCollection.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MRuleCollection.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.RuleCollection.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MRuleCollection.ValidateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.RuleCollection.Validate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MRuleCollection.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MRuleCollection.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.RuleCollection.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MRuleCollection.AllInstances.ValidateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.RuleCollection.Validate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Base.Moles.MRuleResultCache">
            <summary>Mole type of <see cref="T:Gestures.Base.RuleResultCache"/>
            .</summary>
        </member>
        <member name="M:Gestures.Base.Moles.MRuleResultCache.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Base.Moles.MRuleResultCache.#ctor(Gestures.Base.RuleResultCache)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Base.Moles.MRuleResultCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Base.Moles.MRuleResultCache.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Base.Moles.MRuleResultCache.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Base.RuleResultCache.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Base.Moles.MRuleResultCache.GetValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.Base.RuleResultCache.Get(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Base.Moles.MRuleResultCache.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Base.Moles.MRuleResultCache.AllInstances.GetValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.Base.RuleResultCache.Get(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.MRuleToken">
            <summary>Mole type of <see cref="T:Gestures.Objects.LanguageTokens.RuleToken"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MRuleToken.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MRuleToken.#ctor(Gestures.Objects.LanguageTokens.RuleToken)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.MRuleToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MRuleToken.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MRuleToken.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.LanguageTokens.RuleToken.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MRuleToken.ValueGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.RuleToken.Value"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MRuleToken.ValueSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.RuleToken.Value"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.MRuleToken.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MRuleToken.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.RuleToken.Value"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.MRuleToken.AllInstances.ValueSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.LanguageTokens.RuleToken.Value"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.RuleValidationHelper"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.#ctor(Gestures.Rules.RuleValidators.RuleValidationHelper)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.RuleValidationHelper.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.GetBoundingBoxTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.RuleValidationHelper.GetBoundingBox(T:Gestures.Objects.TouchPoint2)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.HasPreviousTouchPointsRectTouchPoint2Int32DateTime">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.RuleValidationHelper.HasPreviousTouchPoints(T:System.Windows.Rect,T:Gestures.Objects.TouchPoint2,T:System.Int32,T:System.DateTime)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.HasPreviousTouchPointsRectTouchPoint2Int32DateTimeListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.RuleValidationHelper.HasPreviousTouchPoints(T:System.Windows.Rect,T:Gestures.Objects.TouchPoint2,T:System.Int32,T:System.DateTime,System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MRuleValidationHelper.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MRuleValidatorExtensions">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.RuleValidatorExtensions"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MRuleValidatorExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MRuleValidatorExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MRuleValidatorExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MRuleValidatorExtensions.ForEachSetValidSetOfPointsCollectionRuleValidatorExtensionsValidate">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.RuleValidatorExtensions.ForEachSet(T:Gestures.Objects.ValidSetOfPointsCollection,T:Gestures.Rules.RuleValidators.RuleValidatorExtensions.Validate)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MRuleValidatorExtensions.ToFilteredPointsStylusPointCollectionInt32">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.RuleValidatorExtensions.ToFilteredPoints(T:System.Windows.Input.StylusPointCollection,T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MSlopeChanged">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.SlopeChanged"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MSlopeChanged.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MSlopeChanged.#ctor(Gestures.ReturnTypes.SlopeChanged)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MSlopeChanged.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MSlopeChanged.Bind(Gestures.ReturnTypes.IReturnType)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.SlopeChanged.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.DeltaGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.SlopeChanged.Delta"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.DeltaSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.SlopeChanged.Delta"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.NewSlopeGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.SlopeChanged.NewSlope"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.NewSlopeSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.SlopeChanged.NewSlope"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.ToString">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.SlopeChanged.ToString"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MSlopeChanged.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.AllInstances.DeltaGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.SlopeChanged.Delta"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.AllInstances.DeltaSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.SlopeChanged.Delta"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.AllInstances.NewSlopeGet">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.SlopeChanged.NewSlope"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.AllInstances.NewSlopeSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.ReturnTypes.SlopeChanged.NewSlope"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChanged.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.SlopeChanged.ToString"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.SlopeChangedCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.#ctor(Gestures.ReturnTypes.SlopeChangedCalculator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.Bind(Gestures.ReturnTypes.IReturnTypeCalculator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.SlopeChangedCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.SlopeChangedCalculator.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MSlopeChangedCalculator.AllInstances.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.SlopeChangedCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchArea">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.TouchArea"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchArea.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchArea.#ctor(Gestures.Rules.Objects.TouchArea)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchArea.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchArea.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchArea.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchArea.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.HeightGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Height"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.HistoryLevelGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.HistoryLevel"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.HistoryLevelSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.HistoryLevel"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.HistoryTimeLineGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.HistoryTimeLine"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.HistoryTimeLineSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.HistoryTimeLine"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchArea.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.TypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Type"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.TypeSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Type"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchArea.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.ValueGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Value"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.ValueSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Value"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.WidthGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Width"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchArea.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.HeightGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Height"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.HistoryLevelGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.HistoryLevel"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.HistoryLevelSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.HistoryLevel"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.HistoryTimeLineGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.HistoryTimeLine"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.HistoryTimeLineSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.HistoryTimeLine"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchArea.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.TypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Type"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.TypeSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Type"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchArea.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Value"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.ValueSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Value"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchArea.AllInstances.WidthGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchArea.Width"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchAreaValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.TouchAreaValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchAreaValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchAreaValidator.#ctor(Gestures.Rules.TouchAreaValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchAreaValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchAreaValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.IsValidListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.IsValid(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.RadiusGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.TouchAreaValidator.Radius"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchAreaValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.AllInstances.IsValidListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.IsValid(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.AllInstances.RadiusGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.TouchAreaValidator.Radius"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchAreaValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchAreaValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchDirection">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.TouchDirection"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchDirection.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchDirection.#ctor(Gestures.Rules.Objects.TouchDirection)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchDirection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchDirection.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchDirection.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchDirection.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchDirection.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchDirection.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchDirection.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchDirection.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchDirection.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchDirection.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchDirection.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchDirection.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchDirection.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchDirection.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchDirection.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchDirection.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchDirection.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchDirection.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.TouchDirectionValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.#ctor(Gestures.Rules.RuleValidators.TouchDirectionValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchDirectionValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchDirectionValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MTouchFrame">
            <summary>Mole type of <see cref="T:Gestures.Objects.TouchFrame"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchFrame.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchFrame.#ctor(Gestures.Objects.TouchFrame)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchFrame.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchFrame.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchFrame.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchFrame.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MTouchFrame.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker">
            <summary>Mole type of <see cref="T:Gestures.Utility.TouchHelpers.TouchHistoryTracker"/>
            .</summary>
        </member>
        <member name="M:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.#ctor(Gestures.Utility.TouchHelpers.TouchHistoryTracker)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.AddTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TouchHelpers.TouchHistoryTracker.Add(T:Gestures.Objects.TouchPoint2)"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TouchHelpers.TouchHistoryTracker.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.CountGet">
            <summary>Sets the mole of <see cref="P:Gestures.Utility.TouchHelpers.TouchHistoryTracker.Count"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.GetStartPosDateTime">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TouchHelpers.TouchHistoryTracker.GetStartPos(T:System.DateTime)"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.GetTouchPointRectDateTimeDateTime">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TouchHelpers.TouchHistoryTracker.GetTouchPoint(T:System.Windows.Rect,T:System.DateTime,T:System.DateTime)"/>
            </summary>
        </member>
        <member name="T:Gestures.Utility.TouchHelpers.Moles.MTouchHistoryTracker.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MTouchInfo">
            <summary>Mole type of <see cref="T:Gestures.Objects.TouchInfo"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchInfo.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchInfo.#ctor(Gestures.Objects.TouchInfo)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.ActionTypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.ActionType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.ActionTypeSetTouchAction2">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.ActionType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchInfo.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.PositionGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.Position"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.PositionSetPoint">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.Position"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.TouchDeviceIdGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.TouchDeviceId"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.TouchDeviceIdSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.TouchDeviceId"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MTouchInfo.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.AllInstances.ActionTypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.ActionType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.AllInstances.ActionTypeSetTouchAction2">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.ActionType"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.AllInstances.PositionGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.Position"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.AllInstances.PositionSetPoint">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.Position"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.AllInstances.TouchDeviceIdGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.TouchDeviceId"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchInfo.AllInstances.TouchDeviceIdSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchInfo.TouchDeviceId"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchLimit">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.TouchLimit"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchLimit.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchLimit.#ctor(Gestures.Rules.Objects.TouchLimit)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchLimit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchLimit.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchLimit.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchLimit.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.MaxGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.MaxSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.MinGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.MinSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchLimit.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.TypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Type"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.TypeSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Type"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchLimit.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchLimit.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.MaxGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.MaxSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.MinGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.MinSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchLimit.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.TypeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Type"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.TypeSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchLimit.Type"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchLimit.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchLimit.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchLimitValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.TouchLimitValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchLimitValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchLimitValidator.#ctor(Gestures.Rules.TouchLimitValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchLimitValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchLimitValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchLimitValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchLimitValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchLimitValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.TouchPathBoundingBox"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.#ctor(Gestures.Rules.Objects.TouchPathBoundingBox)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathBoundingBox.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathBoundingBox.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.MaxHeightGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MaxHeight"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.MaxHeightSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MaxHeight"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.MaxWidthGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MaxWidth"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.MaxWidthSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MaxWidth"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.MinHeightGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MinHeight"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.MinHeightSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MinHeight"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.MinWidthGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MinWidth"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.MinWidthSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MinWidth"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathBoundingBox.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathBoundingBox.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathBoundingBox.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.MaxHeightGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MaxHeight"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.MaxHeightSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MaxHeight"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.MaxWidthGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MaxWidth"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.MaxWidthSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MaxWidth"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.MinHeightGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MinHeight"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.MinHeightSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MinHeight"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.MinWidthGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MinWidth"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.MinWidthSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathBoundingBox.MinWidth"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathBoundingBox.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathBoundingBox.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathBoundingBox.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.#ctor(Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathBoundingBoxValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchPathLength">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.TouchPathLength"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchPathLength.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchPathLength.#ctor(Gestures.Rules.Objects.TouchPathLength)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchPathLength.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchPathLength.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathLength.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathLength.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.MaxGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathLength.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.MaxSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathLength.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.MinGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathLength.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.MinSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathLength.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathLength.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathLength.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchPathLength.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathLength.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.AllInstances.MaxGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathLength.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.AllInstances.MaxSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathLength.Max"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.AllInstances.MinGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathLength.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.AllInstances.MinSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchPathLength.Min"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathLength.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchPathLength.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchPathLength.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.RuleValidators.TouchPathLengthValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.#ctor(Gestures.Rules.RuleValidators.TouchPathLengthValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.CalculatePathLengthTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.CalculatePathLength(T:Gestures.Objects.TouchPoint2)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.AllInstances.CalculatePathLengthTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.CalculatePathLength(T:Gestures.Objects.TouchPoint2)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.MTouchPathLengthValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.RuleValidators.TouchPathLengthValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MTouchPoint2">
            <summary>Mole type of <see cref="T:Gestures.Objects.TouchPoint2"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchPoint2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchPoint2.#ctor(Gestures.Objects.TouchPoint2)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MTouchPoint2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.ActionGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Action"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.ActionSetTouchAction">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Action"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AgeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Age"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.ConstructorTouchInfoUIElement">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchPoint2.#ctor(T:Gestures.Objects.TouchInfo,T:System.Windows.UIElement)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.EndTimeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.EndTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.EndTimeSetDateTime">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.EndTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.PositionGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Position"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.PositionSetPoint">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Position"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.SourceGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Source"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.SourceSetUIElement">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Source"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.StartPointGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.StartPoint"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.StartTimeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.StartTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.StartTimeSetDateTime">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.StartTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.StrokeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Stroke"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.StrokeSetStroke">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Stroke"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.TagsGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Tags"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.TouchDeviceIdGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.TouchDeviceId"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.TouchDeviceIdSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.TouchDeviceId"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.UniqueIdGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.UniqueId"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.UpdateTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchPoint2.Update(T:Gestures.Objects.TouchInfo)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.UpdateTouchInfoTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchPoint2.UpdateTouchInfo(T:Gestures.Objects.TouchInfo)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.UpdateTouchStrokeTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchPoint2.UpdateTouchStroke(T:Gestures.Objects.TouchInfo)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MTouchPoint2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.ActionGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Action"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.ActionSetTouchAction">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Action"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.AgeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Age"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.EndTimeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.EndTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.EndTimeSetDateTime">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.EndTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.PositionGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Position"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.PositionSetPoint">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Position"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.SourceGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Source"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.SourceSetUIElement">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Source"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.StartPointGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.StartPoint"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.StartTimeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.StartTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.StartTimeSetDateTime">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.StartTime"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.StrokeGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Stroke"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.StrokeSetStroke">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Stroke"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.TagsGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.Tags"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.TouchDeviceIdGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.TouchDeviceId"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.TouchDeviceIdSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.TouchDeviceId"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.UniqueIdGet">
            <summary>Sets the mole of <see cref="P:Gestures.Objects.TouchPoint2.UniqueId"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.UpdateTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchPoint2.Update(T:Gestures.Objects.TouchInfo)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.UpdateTouchInfoTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchPoint2.UpdateTouchInfo(T:Gestures.Objects.TouchInfo)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MTouchPoint2.AllInstances.UpdateTouchStrokeTouchInfo">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.TouchPoint2.UpdateTouchStroke(T:Gestures.Objects.TouchInfo)"/>
            </summary>
        </member>
        <member name="T:Gestures.Utility.TouchHelpers.Moles.MTouchPointExtensions">
            <summary>Mole type of <see cref="T:Gestures.Utility.TouchHelpers.TouchPointExtensions"/>
            .</summary>
        </member>
        <member name="M:Gestures.Utility.TouchHelpers.Moles.MTouchPointExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Utility.TouchHelpers.Moles.MTouchPointExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchPointExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchPointExtensions.ToTouchActionTouchAction">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TouchHelpers.TouchPointExtensions.ToTouchAction(T:System.Windows.Input.TouchAction)"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.MTouchPointExtensions.ToTouchActionTouchAction2">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TouchHelpers.TouchPointExtensions.ToTouchAction(T:Gestures.Objects.TouchAction2)"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MTouchPoints">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.TouchPoints"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.#ctor(Gestures.ReturnTypes.TouchPoints)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.Bind(Gestures.ReturnTypes.IReturnType)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.Bind(System.Collections.Generic.ICollection{System.Windows.Point})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.Bind(System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPoints.Bind(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MTouchPoints.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MTouchPoints.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.TouchPoints.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MTouchPoints.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MTouchPointsCalculator">
            <summary>Mole type of <see cref="T:Gestures.ReturnTypes.TouchPointsCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.#ctor(Gestures.ReturnTypes.TouchPointsCalculator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.Bind(Gestures.ReturnTypes.IReturnTypeCalculator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.TouchPointsCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.TouchPointsCalculator.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.MTouchPointsCalculator.AllInstances.CalculateValidSetOfTouchPoints">
            <summary>Sets the mole of <see cref="M:Gestures.ReturnTypes.TouchPointsCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchState">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.TouchState"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchState.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchState.#ctor(Gestures.Rules.Objects.TouchState)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchState.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchState.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchState.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.StatesGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchState.States"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.StatesSetListOfString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchState.States"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchState.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchState.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchState.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchState.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.AllInstances.StatesGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchState.States"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.AllInstances.StatesSetListOfString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchState.States"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchState.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchState.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchState.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchStateValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.TouchStateValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchStateValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchStateValidator.#ctor(Gestures.Rules.TouchStateValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchStateValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchStateValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.GetTouchActionTypeString">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.GetTouchActionType(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.IsValidListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.IsValid(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchStateValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.AllInstances.IsValidListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.IsValid(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStateValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStateValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchStep">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.TouchStep"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchStep.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchStep.#ctor(Gestures.Rules.Objects.TouchStep)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchStep.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchStep.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchStep.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchStep.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.TimeLimitGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.TimeLimit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.TimeLimitSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.TimeLimit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchStep.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.TouchCountGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.TouchCount"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.TouchCountSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.TouchCount"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchStep.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.UnitGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.Unit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.UnitSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.Unit"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchStep.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.TimeLimitGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.TimeLimit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.TimeLimitSetDouble">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.TimeLimit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchStep.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.TouchCountGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.TouchCount"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.TouchCountSetInt32">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.TouchCount"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchStep.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.UnitGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.Unit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchStep.AllInstances.UnitSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchStep.Unit"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchStepValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.TouchStepValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchStepValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchStepValidator.#ctor(Gestures.Rules.TouchStepValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchStepValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchStepValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.GetEarliestValidTimeTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.GetEarliestValidTime(T:Gestures.Objects.TouchPoint2)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchStepValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.AllInstances.GetEarliestValidTimeTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.GetEarliestValidTime(T:Gestures.Objects.TouchPoint2)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchStepValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchStepValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchTime">
            <summary>Mole type of <see cref="T:Gestures.Rules.Objects.TouchTime"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchTime.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchTime.#ctor(Gestures.Rules.Objects.TouchTime)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchTime.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.MTouchTime.Bind(Gestures.Rules.Objects.IRuleData)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchTime.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchTime.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchTime.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchTime.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.UnitGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchTime.Unit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.UnitSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchTime.Unit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.ValueGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchTime.Value"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.ValueSetSingle">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchTime.Value"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.MTouchTime.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.AllInstances.EqualsIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchTime.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.AllInstances.ToGDL">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchTime.ToGDL"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.AllInstances.UnionIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.Objects.TouchTime.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.AllInstances.UnitGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchTime.Unit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.AllInstances.UnitSetString">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchTime.Unit"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchTime.Value"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.MTouchTime.AllInstances.ValueSetSingle">
            <summary>Sets the mole of <see cref="P:Gestures.Rules.Objects.TouchTime.Value"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchTimeValidator">
            <summary>Mole type of <see cref="T:Gestures.Rules.TouchTimeValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchTimeValidator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchTimeValidator.#ctor(Gestures.Rules.TouchTimeValidator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchTimeValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.MTouchTimeValidator.Bind(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.GetAverageTouchPointAgeListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.GetAverageTouchPointAge(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Moles.MTouchTimeValidator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.AllInstances.EqualsIRuleValidator">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.AllInstances.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.AllInstances.GetAverageTouchPointAgeListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.GetAverageTouchPointAge(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.AllInstances.InitIRuleData">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.AllInstances.ValidateListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Rules.Moles.MTouchTimeValidator.AllInstances.ValidateValidSetOfPointsCollection">
            <summary>Sets the mole of <see cref="M:Gestures.Rules.TouchTimeValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Utility.Moles.MTrigonometricCalculationHelper">
            <summary>Mole type of <see cref="T:Gestures.Utility.TrigonometricCalculationHelper"/>
            .</summary>
        </member>
        <member name="M:Gestures.Utility.Moles.MTrigonometricCalculationHelper.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Utility.Moles.MTrigonometricCalculationHelper.#ctor(Gestures.Utility.TrigonometricCalculationHelper)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Utility.Moles.MTrigonometricCalculationHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MTrigonometricCalculationHelper.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MTrigonometricCalculationHelper.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TrigonometricCalculationHelper.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MTrigonometricCalculationHelper.GetDistanceBetweenPointsPointPoint">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TrigonometricCalculationHelper.GetDistanceBetweenPoints(T:System.Windows.Point,T:System.Windows.Point)"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MTrigonometricCalculationHelper.GetDistanceBetweenPointsStylusPointStylusPoint">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TrigonometricCalculationHelper.GetDistanceBetweenPoints(T:System.Windows.Input.StylusPoint,T:System.Windows.Input.StylusPoint)"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MTrigonometricCalculationHelper.GetSlopBetweenPointsPointPoint">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TrigonometricCalculationHelper.GetSlopBetweenPoints(T:System.Windows.Point,T:System.Windows.Point)"/>
            </summary>
        </member>
        <member name="P:Gestures.Utility.Moles.MTrigonometricCalculationHelper.GetSlopBetweenPointsStylusPointStylusPoint">
            <summary>Sets the mole of <see cref="M:Gestures.Utility.TrigonometricCalculationHelper.GetSlopBetweenPoints(T:System.Windows.Input.StylusPoint,T:System.Windows.Input.StylusPoint)"/>
            </summary>
        </member>
        <member name="T:Gestures.Utility.Moles.MTrigonometricCalculationHelper.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.MUnexpectedDataFormatException">
            <summary>Mole type of <see cref="T:Gestures.Exceptions.UnexpectedDataFormatException"/>
            .</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MUnexpectedDataFormatException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MUnexpectedDataFormatException.#ctor(Gestures.Exceptions.UnexpectedDataFormatException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MUnexpectedDataFormatException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MUnexpectedDataFormatException.Bind(System.Runtime.InteropServices._Exception)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.MUnexpectedDataFormatException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.MUnexpectedDataFormatException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.MUnexpectedDataFormatException.ConstructorString">
            <summary>Sets the mole of <see cref="M:Gestures.Exceptions.UnexpectedDataFormatException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.MUnexpectedDataFormatException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:ShapeRecognizers.ConvexHull.Moles.MUtility">
            <summary>Mole type of <see cref="T:ShapeRecognizers.ConvexHull.Utility"/>
            .</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.MUtility.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.MUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MUtility.AreaPointPointPoint">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.Utility.Area(T:System.Windows.Point,T:System.Windows.Point,T:System.Windows.Point)"/>
            </summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MUtility.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MUtility.EqualsPointPoint">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.Utility.Equals(T:System.Windows.Point,T:System.Windows.Point)"/>
            </summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.MUtility.LessPointPoint">
            <summary>Sets the mole of <see cref="M:ShapeRecognizers.ConvexHull.Utility.Less(T:System.Windows.Point,T:System.Windows.Point)"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MValidSetOfPointsCollection">
            <summary>Mole type of <see cref="T:Gestures.Objects.ValidSetOfPointsCollection"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.#ctor(Gestures.Objects.ValidSetOfPointsCollection)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.Bind(System.Collections.Generic.ICollection{Gestures.Objects.ValidSetOfTouchPoints})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.Bind(System.Collections.Generic.IEnumerable{Gestures.Objects.ValidSetOfTouchPoints})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfPointsCollection.Bind(System.Collections.Generic.IList{Gestures.Objects.ValidSetOfTouchPoints})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MValidSetOfPointsCollection.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MValidSetOfPointsCollection.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ValidSetOfPointsCollection.#ctor"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MValidSetOfPointsCollection.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MValidSetOfTouchPoints">
            <summary>Mole type of <see cref="T:Gestures.Objects.ValidSetOfTouchPoints"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.#ctor(Gestures.Objects.ValidSetOfTouchPoints)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.Bind(System.Collections.Generic.ICollection{Gestures.Objects.TouchPoint2})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.Bind(System.Collections.Generic.IEnumerable{Gestures.Objects.TouchPoint2})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.MValidSetOfTouchPoints.Bind(System.Collections.Generic.IList{Gestures.Objects.TouchPoint2})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MValidSetOfTouchPoints.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MValidSetOfTouchPoints.Constructor">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ValidSetOfTouchPoints.#ctor"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MValidSetOfTouchPoints.ConstructorInt32">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ValidSetOfTouchPoints.#ctor(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MValidSetOfTouchPoints.ConstructorListOfTouchPoint2">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ValidSetOfTouchPoints.#ctor(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="P:Gestures.Objects.Moles.MValidSetOfTouchPoints.ConstructorTouchPoint2Array">
            <summary>Sets the mole of <see cref="M:Gestures.Objects.ValidSetOfTouchPoints.#ctor(T:Gestures.Objects.TouchPoint2[])"/>
            </summary>
        </member>
        <member name="T:Gestures.Objects.Moles.MValidSetOfTouchPoints.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SBoundingBox">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.BoundingBox"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SBoundingBox.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SBoundingBox.InitializeStub">
            <summary>Initializes a new instance of type SBoundingBox</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SBoundingBox.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SBoundingBox.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SBoundingBoxCalculator">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.BoundingBoxCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SBoundingBoxCalculator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SBoundingBoxCalculator.InitializeStub">
            <summary>Initializes a new instance of type SBoundingBoxCalculator</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SBoundingBoxCalculator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SBoundingBoxCalculator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Feedbacks.TouchFeedbacks.Moles.SBubblesPath">
            <summary>Stub type of <see cref="T:Gestures.Feedbacks.TouchFeedbacks.BubblesPath"/>
            .</summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.SBubblesPath.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.SBubblesPath.InitializeStub">
            <summary>Initializes a new instance of type SBubblesPath</summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.SBubblesPath.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Feedbacks.TouchFeedbacks.Moles.SBubblesPath.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.SClosedLoop">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.ClosedLoop"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SClosedLoop.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SClosedLoop.InitializeStub">
            <summary>Initializes a new instance of type SClosedLoop</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SClosedLoop.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SClosedLoop.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.SClosedLoopValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.ClosedLoopValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SClosedLoopValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SClosedLoopValidator.InitializeStub">
            <summary>Initializes a new instance of type SClosedLoopValidator</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SClosedLoopValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SClosedLoopValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Combinatorial.Moles.SCombinations">
            <summary>Stub type of <see cref="T:Combinatorial.Combinations"/>
            .</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinations.#ctor(System.Collections.IEnumerator,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinations.#ctor(Gestures.Objects.TouchPoint2[],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinations.#ctor(System.Array,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinations.DoArgumentCheck(System.Int32,System.Int32)">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.DoArgumentCheck(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Combinatorial.Moles.SCombinations.DoArgumentCheckInt32Int32">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.DoArgumentCheck(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinations.FirstIndeces(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.FirstIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Combinatorial.Moles.SCombinations.FirstIndecesBoolean">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.FirstIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinations.InitializeStub">
            <summary>Initializes a new instance of type SCombinations</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinations.NextIndeces(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Combinatorial.Combinations.NextIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Combinatorial.Moles.SCombinations.NextIndecesBoolean">
            <summary>Sets the stub of <see cref="M:Combinatorial.Combinations.NextIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.SCombinations.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Combinatorial.Moles.SCombinations.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Combinatorial.Moles.SCombinatorialBase">
            <summary>Stub type of <see cref="T:Combinatorial.CombinatorialBase"/>
            .</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinatorialBase.#ctor(System.Collections.IEnumerator,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinatorialBase.#ctor(Gestures.Objects.TouchPoint2[],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinatorialBase.#ctor(System.Array,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinatorialBase.DoArgumentCheck(System.Int32,System.Int32)">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.DoArgumentCheck(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Combinatorial.Moles.SCombinatorialBase.DoArgumentCheckInt32Int32">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.DoArgumentCheck(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinatorialBase.FirstIndeces(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.FirstIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Combinatorial.Moles.SCombinatorialBase.FirstIndecesBoolean">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.FirstIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinatorialBase.InitializeStub">
            <summary>Initializes a new instance of type SCombinatorialBase</summary>
        </member>
        <member name="M:Combinatorial.Moles.SCombinatorialBase.NextIndeces(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.NextIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Combinatorial.Moles.SCombinatorialBase.NextIndecesBoolean">
            <summary>Sets the stub of <see cref="M:Combinatorial.CombinatorialBase.NextIndeces(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Combinatorial.Moles.SCombinatorialBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Combinatorial.Moles.SCombinatorialBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:ShapeRecognizers.ConvexHull.Moles.SConvexHullArea">
            <summary>Stub type of <see cref="T:ShapeRecognizers.ConvexHull.ConvexHullArea"/>
            .</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.SConvexHullArea.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.SConvexHullArea.InitializeStub">
            <summary>Initializes a new instance of type SConvexHullArea</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.SConvexHullArea.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.SConvexHullArea.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:ShapeRecognizers.ConvexHull.Moles.SConvexhull">
            <summary>Stub type of <see cref="T:ShapeRecognizers.ConvexHull.Convexhull"/>
            .</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.SConvexhull.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:ShapeRecognizers.ConvexHull.Moles.SConvexhull.InitializeStub">
            <summary>Initializes a new instance of type SConvexhull</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.SConvexhull.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:ShapeRecognizers.ConvexHull.Moles.SConvexhull.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.SDistanceBetweenPoints">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.DistanceBetweenPoints"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SDistanceBetweenPoints.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SDistanceBetweenPoints.InitializeStub">
            <summary>Initializes a new instance of type SDistanceBetweenPoints</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SDistanceBetweenPoints.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SDistanceBetweenPoints.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.SDistanceBetweenPointsValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.DistanceBetweenPointsValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SDistanceBetweenPointsValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SDistanceBetweenPointsValidator.InitializeStub">
            <summary>Initializes a new instance of type SDistanceBetweenPointsValidator</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SDistanceBetweenPointsValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SDistanceBetweenPointsValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SDistanceChanged">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.DistanceChanged"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SDistanceChanged.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SDistanceChanged.InitializeStub">
            <summary>Initializes a new instance of type SDistanceChanged</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SDistanceChanged.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SDistanceChanged.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SDistanceChangedCalculator">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.DistanceChangedCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SDistanceChangedCalculator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SDistanceChangedCalculator.InitializeStub">
            <summary>Initializes a new instance of type SDistanceChangedCalculator</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SDistanceChangedCalculator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SDistanceChangedCalculator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Framework.ShapeRecognizers.Moles.SEllipseRecognizer">
            <summary>Stub type of <see cref="T:Framework.ShapeRecognizers.EllipseRecognizer"/>
            .</summary>
        </member>
        <member name="M:Framework.ShapeRecognizers.Moles.SEllipseRecognizer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Framework.ShapeRecognizers.Moles.SEllipseRecognizer.#ctor(System.Windows.Point[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Framework.ShapeRecognizers.Moles.SEllipseRecognizer.InitializeStub">
            <summary>Initializes a new instance of type SEllipseRecognizer</summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.SEllipseRecognizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Framework.ShapeRecognizers.Moles.SEllipseRecognizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.SEnclosedArea">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.EnclosedArea"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SEnclosedArea.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SEnclosedArea.InitializeStub">
            <summary>Initializes a new instance of type SEnclosedArea</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SEnclosedArea.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SEnclosedArea.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.SEnclosedAreaValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.EnclosedAreaValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SEnclosedAreaValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SEnclosedAreaValidator.InitializeStub">
            <summary>Initializes a new instance of type SEnclosedAreaValidator</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SEnclosedAreaValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SEnclosedAreaValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.SFrameInfo">
            <summary>Stub type of <see cref="T:Gestures.Objects.FrameInfo"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SFrameInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SFrameInfo.InitializeStub">
            <summary>Initializes a new instance of type SFrameInfo</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SFrameInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SFrameInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.SGesture">
            <summary>Stub type of <see cref="T:Gestures.Objects.Gesture"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SGesture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SGesture.InitializeStub">
            <summary>Initializes a new instance of type SGesture</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SGesture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SGesture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.SGestureInfo">
            <summary>Stub type of <see cref="T:Gestures.Objects.GestureInfo"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SGestureInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SGestureInfo.InitializeStub">
            <summary>Initializes a new instance of type SGestureInfo</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SGestureInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SGestureInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.SGestureToken">
            <summary>Stub type of <see cref="T:Gestures.Objects.LanguageTokens.GestureToken"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.SGestureToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.SGestureToken.InitializeStub">
            <summary>Initializes a new instance of type SGestureToken</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.SGestureToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.SGestureToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Feedbacks.GestureFeedbacks.Moles.SHighlightSelectedArea">
            <summary>Stub type of <see cref="T:Gestures.Feedbacks.GestureFeedbacks.HighlightSelectedArea"/>
            .</summary>
        </member>
        <member name="M:Gestures.Feedbacks.GestureFeedbacks.Moles.SHighlightSelectedArea.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Feedbacks.GestureFeedbacks.Moles.SHighlightSelectedArea.InitializeStub">
            <summary>Initializes a new instance of type SHighlightSelectedArea</summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.SHighlightSelectedArea.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Feedbacks.GestureFeedbacks.Moles.SHighlightSelectedArea.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Feedbacks.GestureFeedbacks.Moles.SIGestureFeedback">
            <summary>Stub type of <see cref="T:Gestures.Feedbacks.GestureFeedbacks.IGestureFeedback"/>
            .</summary>
        </member>
        <member name="M:Gestures.Feedbacks.GestureFeedbacks.Moles.SIGestureFeedback.#ctor">
            <summary>Initializes a new instance of type SIGestureFeedback</summary>
        </member>
        <member name="M:Gestures.Feedbacks.GestureFeedbacks.Moles.SIGestureFeedback.g::Gestures#Feedbacks#GestureFeedbacks#IGestureFeedback#RenderUI(System.Windows.Threading.Dispatcher,System.Windows.Controls.Canvas,System.Collections.Generic.List{Gestures.ReturnTypes.IReturnType})">
            <summary>Sets the stub of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.IGestureFeedback.RenderUI(T:System.Windows.Threading.Dispatcher,T:System.Windows.Controls.Canvas,System.Collections.Generic.List`1{T:Gestures.ReturnTypes.IReturnType})"/>
            </summary>
        </member>
        <member name="F:Gestures.Feedbacks.GestureFeedbacks.Moles.SIGestureFeedback.RenderUIDispatcherCanvasListOfIReturnType">
            <summary>Sets the stub of <see cref="M:Gestures.Feedbacks.GestureFeedbacks.IGestureFeedback.RenderUI(T:System.Windows.Threading.Dispatcher,T:System.Windows.Controls.Canvas,System.Collections.Generic.List`1{T:Gestures.ReturnTypes.IReturnType})"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SIReturnType">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.IReturnType"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SIReturnType.#ctor">
            <summary>Initializes a new instance of type SIReturnType</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SIReturnTypeCalculator">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.IReturnTypeCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SIReturnTypeCalculator.#ctor">
            <summary>Initializes a new instance of type SIReturnTypeCalculator</summary>
        </member>
        <member name="F:Gestures.ReturnTypes.Moles.SIReturnTypeCalculator.CalculateValidSetOfTouchPoints">
            <summary>Sets the stub of <see cref="M:Gestures.ReturnTypes.IReturnTypeCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SIReturnTypeCalculator.g::Gestures#ReturnTypes#IReturnTypeCalculator#Calculate(Gestures.Objects.ValidSetOfTouchPoints)">
            <summary>Sets the stub of <see cref="M:Gestures.ReturnTypes.IReturnTypeCalculator.Calculate(T:Gestures.Objects.ValidSetOfTouchPoints)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.SIRuleData">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.IRuleData"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SIRuleData.#ctor">
            <summary>Initializes a new instance of type SIRuleData</summary>
        </member>
        <member name="F:Gestures.Rules.Objects.Moles.SIRuleData.EqualsIRuleData">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.Objects.IRuleData.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SIRuleData.g::Gestures#Rules#Objects#IRuleData#Equals(Gestures.Rules.Objects.IRuleData)">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.Objects.IRuleData.Equals(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SIRuleData.g::Gestures#Rules#Objects#IRuleData#ToGDL">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.Objects.IRuleData.ToGDL"/>
            </summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SIRuleData.g::Gestures#Rules#Objects#IRuleData#Union(Gestures.Rules.Objects.IRuleData)">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.Objects.IRuleData.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="F:Gestures.Rules.Objects.Moles.SIRuleData.ToGDL">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.Objects.IRuleData.ToGDL"/>
            </summary>
        </member>
        <member name="F:Gestures.Rules.Objects.Moles.SIRuleData.UnionIRuleData">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.Objects.IRuleData.Union(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.SIRuleValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.IRuleValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.#ctor">
            <summary>Initializes a new instance of type SIRuleValidator</summary>
        </member>
        <member name="F:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.EqualsIRuleValidator">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="F:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.GenerateRuleDataListOfTouchPoint2">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.g::Gestures#Rules#RuleValidators#IRuleValidator#Equals(Gestures.Rules.RuleValidators.IRuleValidator)">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.Equals(T:Gestures.Rules.RuleValidators.IRuleValidator)"/>
            </summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.g::Gestures#Rules#RuleValidators#IRuleValidator#GenerateRuleData(System.Collections.Generic.List{Gestures.Objects.TouchPoint2})">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.GenerateRuleData(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.g::Gestures#Rules#RuleValidators#IRuleValidator#Init(Gestures.Rules.Objects.IRuleData)">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.g::Gestures#Rules#RuleValidators#IRuleValidator#Validate(Gestures.Objects.ValidSetOfPointsCollection)">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.g::Gestures#Rules#RuleValidators#IRuleValidator#Validate(System.Collections.Generic.List{Gestures.Objects.TouchPoint2})">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="F:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.InitIRuleData">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.Init(T:Gestures.Rules.Objects.IRuleData)"/>
            </summary>
        </member>
        <member name="F:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.ValidateListOfTouchPoint2">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.Validate(System.Collections.Generic.List`1{T:Gestures.Objects.TouchPoint2})"/>
            </summary>
        </member>
        <member name="F:Gestures.Rules.RuleValidators.Moles.SIRuleValidator.ValidateValidSetOfPointsCollection">
            <summary>Sets the stub of <see cref="M:Gestures.Rules.RuleValidators.IRuleValidator.Validate(T:Gestures.Objects.ValidSetOfPointsCollection)"/>
            </summary>
        </member>
        <member name="T:Gestures.Feedbacks.TouchFeedbacks.Moles.SITouchFeedback">
            <summary>Stub type of <see cref="T:Gestures.Feedbacks.TouchFeedbacks.ITouchFeedback"/>
            .</summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.SITouchFeedback.#ctor">
            <summary>Initializes a new instance of type SITouchFeedback</summary>
        </member>
        <member name="F:Gestures.Feedbacks.TouchFeedbacks.Moles.SITouchFeedback.Dispose">
            <summary>Sets the stub of <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="F:Gestures.Feedbacks.TouchFeedbacks.Moles.SITouchFeedback.FrameChangedFrameInfo">
            <summary>Sets the stub of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.ITouchFeedback.FrameChanged(T:Gestures.Objects.FrameInfo)"/>
            </summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.SITouchFeedback.g::Gestures#Feedbacks#TouchFeedbacks#ITouchFeedback#FrameChanged(Gestures.Objects.FrameInfo)">
            <summary>Sets the stub of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.ITouchFeedback.FrameChanged(T:Gestures.Objects.FrameInfo)"/>
            </summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.SITouchFeedback.g::Gestures#Feedbacks#TouchFeedbacks#ITouchFeedback#Init(System.Windows.Controls.Panel,System.Windows.Threading.Dispatcher)">
            <summary>Sets the stub of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.ITouchFeedback.Init(T:System.Windows.Controls.Panel,T:System.Windows.Threading.Dispatcher)"/>
            </summary>
        </member>
        <member name="F:Gestures.Feedbacks.TouchFeedbacks.Moles.SITouchFeedback.InitPanelDispatcher">
            <summary>Sets the stub of <see cref="M:Gestures.Feedbacks.TouchFeedbacks.ITouchFeedback.Init(T:System.Windows.Controls.Panel,T:System.Windows.Threading.Dispatcher)"/>
            </summary>
        </member>
        <member name="M:Gestures.Feedbacks.TouchFeedbacks.Moles.SITouchFeedback.global::System#IDisposable#Dispose">
            <summary>Sets the stub of <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SInfo">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.Info"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SInfo.InitializeStub">
            <summary>Initializes a new instance of type SInfo</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SInfoCalculator">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.InfoCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SInfoCalculator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SInfoCalculator.InitializeStub">
            <summary>Initializes a new instance of type SInfoCalculator</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SInfoCalculator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SInfoCalculator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.SIntersectTouchPath">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.IntersectTouchPath"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SIntersectTouchPath.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SIntersectTouchPath.InitializeStub">
            <summary>Initializes a new instance of type SIntersectTouchPath</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SIntersectTouchPath.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SIntersectTouchPath.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.SIntersectTouchPathValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.IntersectTouchPathValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SIntersectTouchPathValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SIntersectTouchPathValidator.InitializeStub">
            <summary>Initializes a new instance of type SIntersectTouchPathValidator</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SIntersectTouchPathValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SIntersectTouchPathValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.SInvalidDataSetException">
            <summary>Stub type of <see cref="T:Gestures.Exceptions.InvalidDataSetException"/>
            .</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.SInvalidDataSetException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.SInvalidDataSetException.InitializeStub">
            <summary>Initializes a new instance of type SInvalidDataSetException</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.SInvalidDataSetException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.SInvalidDataSetException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.SLanguageSyntaxErrorException">
            <summary>Stub type of <see cref="T:Gestures.Exceptions.LanguageSyntaxErrorException"/>
            .</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.SLanguageSyntaxErrorException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.SLanguageSyntaxErrorException.InitializeStub">
            <summary>Initializes a new instance of type SLanguageSyntaxErrorException</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.SLanguageSyntaxErrorException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.SLanguageSyntaxErrorException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.SLanguageToken">
            <summary>Stub type of <see cref="T:Gestures.Objects.LanguageTokens.LanguageToken"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.SLanguageToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.SLanguageToken.InitializeStub">
            <summary>Initializes a new instance of type SLanguageToken</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.SLanguageToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.SLanguageToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.SOnSameObject">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.OnSameObject"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SOnSameObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.SOnSameObject.InitializeStub">
            <summary>Initializes a new instance of type SOnSameObject</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SOnSameObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.SOnSameObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.SOnSameObjectValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.OnSameObjectValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SOnSameObjectValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SOnSameObjectValidator.InitializeStub">
            <summary>Initializes a new instance of type SOnSameObjectValidator</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SOnSameObjectValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SOnSameObjectValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SPosition">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.Position"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPosition.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPosition.InitializeStub">
            <summary>Initializes a new instance of type SPosition</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPosition.ToString">
            <summary>Sets the stub of <see cref="M:Gestures.ReturnTypes.Position.ToString"/>
            </summary>
        </member>
        <member name="F:Gestures.ReturnTypes.Moles.SPosition.ToString01">
            <summary>Sets the stub of <see cref="M:Gestures.ReturnTypes.Position.ToString"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SPosition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SPosition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SPositionCalculator">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.PositionCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPositionCalculator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPositionCalculator.InitializeStub">
            <summary>Initializes a new instance of type SPositionCalculator</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SPositionCalculator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SPositionCalculator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SPositionChanged">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.PositionChanged"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPositionChanged.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPositionChanged.InitializeStub">
            <summary>Initializes a new instance of type SPositionChanged</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPositionChanged.ToString">
            <summary>Sets the stub of <see cref="M:Gestures.ReturnTypes.PositionChanged.ToString"/>
            </summary>
        </member>
        <member name="F:Gestures.ReturnTypes.Moles.SPositionChanged.ToString01">
            <summary>Sets the stub of <see cref="M:Gestures.ReturnTypes.PositionChanged.ToString"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SPositionChanged.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SPositionChanged.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SPositionChangedCalculator">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.PositionChangedCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPositionChangedCalculator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SPositionChangedCalculator.InitializeStub">
            <summary>Initializes a new instance of type SPositionChangedCalculator</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SPositionChangedCalculator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SPositionChangedCalculator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.SReturnToken">
            <summary>Stub type of <see cref="T:Gestures.Objects.LanguageTokens.ReturnToken"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.SReturnToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.SReturnToken.InitializeStub">
            <summary>Initializes a new instance of type SReturnToken</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.SReturnToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.SReturnToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.SReturnTypeInfo">
            <summary>Stub type of <see cref="T:Gestures.Objects.ReturnTypeInfo"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SReturnTypeInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SReturnTypeInfo.InitializeStub">
            <summary>Initializes a new instance of type SReturnTypeInfo</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SReturnTypeInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SReturnTypeInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.SReturnTypeInfoCollection">
            <summary>Stub type of <see cref="T:Gestures.Objects.ReturnTypeInfoCollection"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SReturnTypeInfoCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SReturnTypeInfoCollection.InitializeStub">
            <summary>Initializes a new instance of type SReturnTypeInfoCollection</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SReturnTypeInfoCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SReturnTypeInfoCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.SRuleCollection">
            <summary>Stub type of <see cref="T:Gestures.Objects.RuleCollection"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SRuleCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SRuleCollection.InitializeStub">
            <summary>Initializes a new instance of type SRuleCollection</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SRuleCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SRuleCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Base.Moles.SRuleResultCache">
            <summary>Stub type of <see cref="T:Gestures.Base.RuleResultCache"/>
            .</summary>
        </member>
        <member name="M:Gestures.Base.Moles.SRuleResultCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Base.Moles.SRuleResultCache.InitializeStub">
            <summary>Initializes a new instance of type SRuleResultCache</summary>
        </member>
        <member name="P:Gestures.Base.Moles.SRuleResultCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Base.Moles.SRuleResultCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.LanguageTokens.Moles.SRuleToken">
            <summary>Stub type of <see cref="T:Gestures.Objects.LanguageTokens.RuleToken"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.SRuleToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.LanguageTokens.Moles.SRuleToken.InitializeStub">
            <summary>Initializes a new instance of type SRuleToken</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.SRuleToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.LanguageTokens.Moles.SRuleToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.SRuleValidationHelper">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.RuleValidationHelper"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SRuleValidationHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.SRuleValidationHelper.InitializeStub">
            <summary>Initializes a new instance of type SRuleValidationHelper</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SRuleValidationHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.SRuleValidationHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SSlopeChanged">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.SlopeChanged"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SSlopeChanged.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SSlopeChanged.InitializeStub">
            <summary>Initializes a new instance of type SSlopeChanged</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SSlopeChanged.ToString">
            <summary>Sets the stub of <see cref="M:Gestures.ReturnTypes.SlopeChanged.ToString"/>
            </summary>
        </member>
        <member name="F:Gestures.ReturnTypes.Moles.SSlopeChanged.ToString01">
            <summary>Sets the stub of <see cref="M:Gestures.ReturnTypes.SlopeChanged.ToString"/>
            </summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SSlopeChanged.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SSlopeChanged.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.SSlopeChangedCalculator">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.SlopeChangedCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SSlopeChangedCalculator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.SSlopeChangedCalculator.InitializeStub">
            <summary>Initializes a new instance of type SSlopeChangedCalculator</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SSlopeChangedCalculator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.SSlopeChangedCalculator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.STouchArea">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.TouchArea"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchArea.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchArea.InitializeStub">
            <summary>Initializes a new instance of type STouchArea</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchArea.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchArea.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Moles.STouchAreaValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.TouchAreaValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchAreaValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchAreaValidator.InitializeStub">
            <summary>Initializes a new instance of type STouchAreaValidator</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchAreaValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchAreaValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.STouchDirection">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.TouchDirection"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchDirection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchDirection.InitializeStub">
            <summary>Initializes a new instance of type STouchDirection</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchDirection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchDirection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.STouchDirectionValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.TouchDirectionValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.STouchDirectionValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.STouchDirectionValidator.InitializeStub">
            <summary>Initializes a new instance of type STouchDirectionValidator</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.STouchDirectionValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.STouchDirectionValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.STouchFrame">
            <summary>Stub type of <see cref="T:Gestures.Objects.TouchFrame"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.STouchFrame.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.STouchFrame.InitializeStub">
            <summary>Initializes a new instance of type STouchFrame</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.STouchFrame.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.STouchFrame.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Utility.TouchHelpers.Moles.STouchHistoryTracker">
            <summary>Stub type of <see cref="T:Gestures.Utility.TouchHelpers.TouchHistoryTracker"/>
            .</summary>
        </member>
        <member name="M:Gestures.Utility.TouchHelpers.Moles.STouchHistoryTracker.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Utility.TouchHelpers.Moles.STouchHistoryTracker.InitializeStub">
            <summary>Initializes a new instance of type STouchHistoryTracker</summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.STouchHistoryTracker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Utility.TouchHelpers.Moles.STouchHistoryTracker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.STouchInfo">
            <summary>Stub type of <see cref="T:Gestures.Objects.TouchInfo"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.STouchInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.STouchInfo.InitializeStub">
            <summary>Initializes a new instance of type STouchInfo</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.STouchInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.STouchInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.STouchLimit">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.TouchLimit"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchLimit.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchLimit.InitializeStub">
            <summary>Initializes a new instance of type STouchLimit</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchLimit.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchLimit.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Moles.STouchLimitValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.TouchLimitValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchLimitValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchLimitValidator.InitializeStub">
            <summary>Initializes a new instance of type STouchLimitValidator</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchLimitValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchLimitValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.STouchPathBoundingBox">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.TouchPathBoundingBox"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchPathBoundingBox.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchPathBoundingBox.InitializeStub">
            <summary>Initializes a new instance of type STouchPathBoundingBox</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchPathBoundingBox.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchPathBoundingBox.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.STouchPathBoundingBoxValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.TouchPathBoundingBoxValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.STouchPathBoundingBoxValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.STouchPathBoundingBoxValidator.InitializeStub">
            <summary>Initializes a new instance of type STouchPathBoundingBoxValidator</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.STouchPathBoundingBoxValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.STouchPathBoundingBoxValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.STouchPathLength">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.TouchPathLength"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchPathLength.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchPathLength.InitializeStub">
            <summary>Initializes a new instance of type STouchPathLength</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchPathLength.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchPathLength.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.RuleValidators.Moles.STouchPathLengthValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.RuleValidators.TouchPathLengthValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.STouchPathLengthValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.RuleValidators.Moles.STouchPathLengthValidator.InitializeStub">
            <summary>Initializes a new instance of type STouchPathLengthValidator</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.STouchPathLengthValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.RuleValidators.Moles.STouchPathLengthValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.STouchPoint2">
            <summary>Stub type of <see cref="T:Gestures.Objects.TouchPoint2"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.STouchPoint2.#ctor(Gestures.Objects.TouchInfo,System.Windows.UIElement)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.STouchPoint2.InitializeStub">
            <summary>Initializes a new instance of type STouchPoint2</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.STouchPoint2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.STouchPoint2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.STouchPoints">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.TouchPoints"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.STouchPoints.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.STouchPoints.InitializeStub">
            <summary>Initializes a new instance of type STouchPoints</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.STouchPoints.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.STouchPoints.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.ReturnTypes.Moles.STouchPointsCalculator">
            <summary>Stub type of <see cref="T:Gestures.ReturnTypes.TouchPointsCalculator"/>
            .</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.STouchPointsCalculator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.ReturnTypes.Moles.STouchPointsCalculator.InitializeStub">
            <summary>Initializes a new instance of type STouchPointsCalculator</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.STouchPointsCalculator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.ReturnTypes.Moles.STouchPointsCalculator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.STouchState">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.TouchState"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchState.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchState.InitializeStub">
            <summary>Initializes a new instance of type STouchState</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Moles.STouchStateValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.TouchStateValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchStateValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchStateValidator.InitializeStub">
            <summary>Initializes a new instance of type STouchStateValidator</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchStateValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchStateValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.STouchStep">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.TouchStep"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchStep.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchStep.InitializeStub">
            <summary>Initializes a new instance of type STouchStep</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchStep.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchStep.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Moles.STouchStepValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.TouchStepValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchStepValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchStepValidator.InitializeStub">
            <summary>Initializes a new instance of type STouchStepValidator</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchStepValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchStepValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Objects.Moles.STouchTime">
            <summary>Stub type of <see cref="T:Gestures.Rules.Objects.TouchTime"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchTime.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Objects.Moles.STouchTime.InitializeStub">
            <summary>Initializes a new instance of type STouchTime</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchTime.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Objects.Moles.STouchTime.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Rules.Moles.STouchTimeValidator">
            <summary>Stub type of <see cref="T:Gestures.Rules.TouchTimeValidator"/>
            .</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchTimeValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Rules.Moles.STouchTimeValidator.InitializeStub">
            <summary>Initializes a new instance of type STouchTimeValidator</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchTimeValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Rules.Moles.STouchTimeValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Utility.Moles.STrigonometricCalculationHelper">
            <summary>Stub type of <see cref="T:Gestures.Utility.TrigonometricCalculationHelper"/>
            .</summary>
        </member>
        <member name="M:Gestures.Utility.Moles.STrigonometricCalculationHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Utility.Moles.STrigonometricCalculationHelper.InitializeStub">
            <summary>Initializes a new instance of type STrigonometricCalculationHelper</summary>
        </member>
        <member name="P:Gestures.Utility.Moles.STrigonometricCalculationHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Utility.Moles.STrigonometricCalculationHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Exceptions.Moles.SUnexpectedDataFormatException">
            <summary>Stub type of <see cref="T:Gestures.Exceptions.UnexpectedDataFormatException"/>
            .</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.SUnexpectedDataFormatException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Exceptions.Moles.SUnexpectedDataFormatException.InitializeStub">
            <summary>Initializes a new instance of type SUnexpectedDataFormatException</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.SUnexpectedDataFormatException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Exceptions.Moles.SUnexpectedDataFormatException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.SValidSetOfPointsCollection">
            <summary>Stub type of <see cref="T:Gestures.Objects.ValidSetOfPointsCollection"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SValidSetOfPointsCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SValidSetOfPointsCollection.InitializeStub">
            <summary>Initializes a new instance of type SValidSetOfPointsCollection</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SValidSetOfPointsCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SValidSetOfPointsCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Gestures.Objects.Moles.SValidSetOfTouchPoints">
            <summary>Stub type of <see cref="T:Gestures.Objects.ValidSetOfTouchPoints"/>
            .</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SValidSetOfTouchPoints.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SValidSetOfTouchPoints.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SValidSetOfTouchPoints.#ctor(Gestures.Objects.TouchPoint2[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SValidSetOfTouchPoints.#ctor(System.Collections.Generic.List{Gestures.Objects.TouchPoint2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Gestures.Objects.Moles.SValidSetOfTouchPoints.InitializeStub">
            <summary>Initializes a new instance of type SValidSetOfTouchPoints</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SValidSetOfTouchPoints.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Gestures.Objects.Moles.SValidSetOfTouchPoints.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
    </members>
</doc>
